2024-07-10 20:31:22 - Starting TaskmanagementApplication using Java 22.0.1 with PID 27920 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-10 20:31:22 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 20:31:22 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 20:31:22 - Finished Spring Data repository scanning in 39 ms. Found 2 JPA repository interfaces.
2024-07-10 20:31:23 - Tomcat initialized with port 8080 (http)
2024-07-10 20:31:23 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-10 20:31:23 - Starting service [Tomcat]
2024-07-10 20:31:23 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 20:31:23 - Initializing Spring embedded WebApplicationContext
2024-07-10 20:31:23 - Root WebApplicationContext: initialization completed in 1261 ms
2024-07-10 20:31:23 - HikariPool-1 - Starting...
2024-07-10 20:31:23 - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:421e7435-1ddb-4473-b5fb-5f1dba76fc41 user=SA
2024-07-10 20:31:23 - HikariPool-1 - Start completed.
2024-07-10 20:31:23 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 20:31:23 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 20:31:23 - HHH000026: Second-level cache disabled
2024-07-10 20:31:24 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 20:31:24 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 20:31:24 - GenerationTarget encountered exception accepting command : Error executing DDL "drop table if exists user cascade " via JDBC [Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier";]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "drop table if exists user cascade " via JDBC [Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier";]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:381)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:238)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:952)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier"; SQL statement:
drop table if exists user cascade  [42001-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.getSyntaxError(DbException.java:261)
	at org.h2.command.Parser.readIdentifier(Parser.java:5533)
	at org.h2.command.Parser.readIdentifierWithSchema(Parser.java:5493)
	at org.h2.command.Parser.readIdentifierWithSchema(Parser.java:5522)
	at org.h2.command.Parser.parseDrop(Parser.java:2113)
	at org.h2.command.Parser.parsePrepared(Parser.java:679)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 39 common frames omitted
2024-07-10 20:31:24 - GenerationTarget encountered exception accepting command : Error executing DDL "create table user (id bigint generated by default as identity, email varchar(255), password varchar(255), username varchar(255), primary key (id))" via JDBC [Syntax error in SQL statement "create table [*]user (id bigint generated by default as identity, email varchar(255), password varchar(255), username varchar(255), primary key (id))"; expected "identifier";]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table user (id bigint generated by default as identity, email varchar(255), password varchar(255), username varchar(255), primary key (id))" via JDBC [Syntax error in SQL statement "create table [*]user (id bigint generated by default as identity, email varchar(255), password varchar(255), username varchar(255), primary key (id))"; expected "identifier";]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:428)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:344)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:250)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:952)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table [*]user (id bigint generated by default as identity, email varchar(255), password varchar(255), username varchar(255), primary key (id))"; expected "identifier"; SQL statement:
create table user (id bigint generated by default as identity, email varchar(255), password varchar(255), username varchar(255), primary key (id)) [42001-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.getSyntaxError(DbException.java:261)
	at org.h2.command.Parser.readIdentifier(Parser.java:5533)
	at org.h2.command.Parser.readIdentifierWithSchema(Parser.java:5493)
	at org.h2.command.Parser.readIdentifierWithSchema(Parser.java:5522)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8921)
	at org.h2.command.Parser.parseCreate(Parser.java:6404)
	at org.h2.command.Parser.parsePrepared(Parser.java:666)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 39 common frames omitted
2024-07-10 20:31:24 - GenerationTarget encountered exception accepting command : Error executing DDL "alter table if exists task add constraint FK2hsytmxysatfvt0p1992cw449 foreign key (user_id) references user" via JDBC [Syntax error in SQL statement "alter table if exists task add constraint FK2hsytmxysatfvt0p1992cw449 foreign key (user_id) references [*]user"; expected "identifier";]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table if exists task add constraint FK2hsytmxysatfvt0p1992cw449 foreign key (user_id) references user" via JDBC [Syntax error in SQL statement "alter table if exists task add constraint FK2hsytmxysatfvt0p1992cw449 foreign key (user_id) references [*]user"; expected "identifier";]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createForeignKeys(SchemaCreatorImpl.java:305)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:251)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:250)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:952)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "alter table if exists task add constraint FK2hsytmxysatfvt0p1992cw449 foreign key (user_id) references [*]user"; expected "identifier"; SQL statement:
alter table if exists task add constraint FK2hsytmxysatfvt0p1992cw449 foreign key (user_id) references user [42001-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.getSyntaxError(DbException.java:261)
	at org.h2.command.Parser.readIdentifier(Parser.java:5533)
	at org.h2.command.Parser.readIdentifierWithSchema(Parser.java:5493)
	at org.h2.command.Parser.parseReferences(Parser.java:8849)
	at org.h2.command.Parser.parseTableConstraintIf(Parser.java:8783)
	at org.h2.command.Parser.parseAlterTable(Parser.java:8145)
	at org.h2.command.Parser.parseAlter(Parser.java:7211)
	at org.h2.command.Parser.parsePrepared(Parser.java:650)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 38 common frames omitted
2024-07-10 20:31:24 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 20:31:25 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'taskController': Unsatisfied dependency expressed through field 'userService': Error creating bean with name 'userService': Unsatisfied dependency expressed through field 'passwordEncoder': No qualifying bean of type 'org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2024-07-10 20:31:25 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 20:31:25 - HHH000478: Unsuccessful: drop table if exists user cascade 
2024-07-10 20:31:25 - HikariPool-1 - Shutdown initiated...
2024-07-10 20:31:25 - HikariPool-1 - Shutdown completed.
2024-07-10 20:31:25 - Stopping service [Tomcat]
2024-07-10 20:31:25 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-07-10 20:31:25 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field passwordEncoder in com.example.taskmanagement.service.UserService required a bean of type 'org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder' in your configuration.

2024-07-10 20:39:25 - Starting TaskmanagementApplication using Java 22.0.1 with PID 13404 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-10 20:39:25 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 20:39:26 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 20:39:26 - Finished Spring Data repository scanning in 50 ms. Found 2 JPA repository interfaces.
2024-07-10 20:39:27 - Tomcat initialized with port 8080 (http)
2024-07-10 20:39:27 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-10 20:39:27 - Starting service [Tomcat]
2024-07-10 20:39:27 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 20:39:27 - Initializing Spring embedded WebApplicationContext
2024-07-10 20:39:27 - Root WebApplicationContext: initialization completed in 1353 ms
2024-07-10 20:39:27 - HikariPool-1 - Starting...
2024-07-10 20:39:27 - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:ed9fb44f-990f-4269-bbae-25121403ddfa user=SA
2024-07-10 20:39:27 - HikariPool-1 - Start completed.
2024-07-10 20:39:27 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 20:39:27 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 20:39:27 - HHH000026: Second-level cache disabled
2024-07-10 20:39:28 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 20:39:29 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 20:39:29 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 20:39:29 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'taskController': Unsatisfied dependency expressed through field 'userService': Error creating bean with name 'userService': Unsatisfied dependency expressed through field 'passwordEncoder': No qualifying bean of type 'org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2024-07-10 20:39:29 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 20:39:29 - HikariPool-1 - Shutdown initiated...
2024-07-10 20:39:29 - HikariPool-1 - Shutdown completed.
2024-07-10 20:39:29 - Stopping service [Tomcat]
2024-07-10 20:39:29 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-07-10 20:39:29 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field passwordEncoder in com.example.taskmanagement.service.UserService required a bean of type 'org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder' in your configuration.

2024-07-10 20:42:05 - Starting TaskmanagementApplication using Java 22.0.1 with PID 2336 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-10 20:42:05 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 20:42:06 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 20:42:06 - Finished Spring Data repository scanning in 46 ms. Found 2 JPA repository interfaces.
2024-07-10 20:42:07 - Tomcat initialized with port 8080 (http)
2024-07-10 20:42:07 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-10 20:42:07 - Starting service [Tomcat]
2024-07-10 20:42:07 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 20:42:07 - Initializing Spring embedded WebApplicationContext
2024-07-10 20:42:07 - Root WebApplicationContext: initialization completed in 1272 ms
2024-07-10 20:42:07 - HikariPool-1 - Starting...
2024-07-10 20:42:07 - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:e1c43a0f-c3b2-4c52-89a0-d97e25db454f user=SA
2024-07-10 20:42:07 - HikariPool-1 - Start completed.
2024-07-10 20:42:07 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 20:42:07 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 20:42:07 - HHH000026: Second-level cache disabled
2024-07-10 20:42:07 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 20:42:08 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 20:42:08 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 20:42:08 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 20:42:09 - 

Using generated security password: a4d888be-53d9-4acc-8d6c-9f0b01bd294f

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-10 20:42:09 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-10 20:42:09 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-10 20:42:09 - Tomcat started on port 8080 (http) with context path '/'
2024-07-10 20:42:09 - Started TaskmanagementApplication in 4.133 seconds (process running for 4.606)
2024-07-10 20:43:18 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 20:43:18 - Initializing Servlet 'dispatcherServlet'
2024-07-10 20:43:18 - Completed initialization in 2 ms
2024-07-10 21:05:43 - Starting TaskmanagementApplication using Java 22.0.1 with PID 12848 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-10 21:05:43 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 21:05:44 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 21:05:44 - Finished Spring Data repository scanning in 60 ms. Found 2 JPA repository interfaces.
2024-07-10 21:05:45 - Tomcat initialized with port 8080 (http)
2024-07-10 21:05:45 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-10 21:05:45 - Starting service [Tomcat]
2024-07-10 21:05:45 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 21:05:45 - Initializing Spring embedded WebApplicationContext
2024-07-10 21:05:45 - Root WebApplicationContext: initialization completed in 1493 ms
2024-07-10 21:05:45 - HikariPool-1 - Starting...
2024-07-10 21:05:45 - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:2a63f9b9-881b-4a36-b60f-4cd8c4438e2e user=SA
2024-07-10 21:05:45 - HikariPool-1 - Start completed.
2024-07-10 21:05:45 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 21:05:45 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 21:05:45 - HHH000026: Second-level cache disabled
2024-07-10 21:05:46 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 21:05:47 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 21:05:47 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 21:05:47 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 21:05:47 - 

Using generated security password: 2011d51b-17a3-422c-9100-42841bdd3613

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-10 21:05:47 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-10 21:05:48 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-10 21:05:48 - Tomcat started on port 8080 (http) with context path '/'
2024-07-10 21:05:48 - Started TaskmanagementApplication in 4.752 seconds (process running for 5.076)
2024-07-10 21:05:51 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 21:05:51 - Initializing Servlet 'dispatcherServlet'
2024-07-10 21:05:51 - Completed initialization in 1 ms
2024-07-10 21:22:20 - Starting TaskmanagementApplication using Java 22.0.1 with PID 18764 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-10 21:22:20 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 21:22:20 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 21:22:20 - Finished Spring Data repository scanning in 50 ms. Found 2 JPA repository interfaces.
2024-07-10 21:22:21 - Tomcat initialized with port 8080 (http)
2024-07-10 21:22:21 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-10 21:22:21 - Starting service [Tomcat]
2024-07-10 21:22:21 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 21:22:21 - Initializing Spring embedded WebApplicationContext
2024-07-10 21:22:21 - Root WebApplicationContext: initialization completed in 1357 ms
2024-07-10 21:22:21 - HikariPool-1 - Starting...
2024-07-10 21:22:21 - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:b7b254be-134e-4ebe-b022-ea72bb4891b8 user=SA
2024-07-10 21:22:21 - HikariPool-1 - Start completed.
2024-07-10 21:22:22 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 21:22:22 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 21:22:22 - HHH000026: Second-level cache disabled
2024-07-10 21:22:22 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 21:22:23 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 21:22:23 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 21:22:23 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 21:22:23 - 

Using generated security password: e70920ea-973f-4941-ab9f-d844fde40627

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-10 21:22:23 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-10 21:22:24 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-10 21:22:24 - Tomcat started on port 8080 (http) with context path '/'
2024-07-10 21:22:24 - Started TaskmanagementApplication in 4.343 seconds (process running for 4.644)
2024-07-10 21:28:32 - Starting TaskmanagementApplication using Java 22.0.1 with PID 14520 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-10 21:28:32 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 21:28:33 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 21:28:33 - Finished Spring Data repository scanning in 47 ms. Found 2 JPA repository interfaces.
2024-07-10 21:28:34 - Tomcat initialized with port 8080 (http)
2024-07-10 21:28:34 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-10 21:28:34 - Starting service [Tomcat]
2024-07-10 21:28:34 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 21:28:34 - Initializing Spring embedded WebApplicationContext
2024-07-10 21:28:34 - Root WebApplicationContext: initialization completed in 1940 ms
2024-07-10 21:28:34 - Filter 'webMvcObservationFilter' configured for use
2024-07-10 21:28:34 - HikariPool-1 - Starting...
2024-07-10 21:28:35 - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:1a02f421-6db1-41d1-ab60-ffbcb4d83b1a user=SA
2024-07-10 21:28:35 - HikariPool-1 - Start completed.
2024-07-10 21:28:35 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/Assignment%201%20Spring%20Boot/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-10 21:28:35 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-10 21:28:35 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-10 21:28:35 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 21:28:35 - HHH000206: 'hibernate.properties' not found
2024-07-10 21:28:35 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-10 21:28:35 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-10 21:28:35 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-10 21:28:35 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-10 21:28:35 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-10 21:28:35 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-10 21:28:35 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-10 21:28:35 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-10 21:28:35 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-10 21:28:35 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-10 21:28:35 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-10 21:28:35 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-10 21:28:35 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-10 21:28:35 - HHH000026: Second-level cache disabled
2024-07-10 21:28:35 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@64544ee4
2024-07-10 21:28:35 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@64544ee4
2024-07-10 21:28:35 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@64544ee4
2024-07-10 21:28:35 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@16d61071
2024-07-10 21:28:35 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@16d61071
2024-07-10 21:28:35 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@18692e80
2024-07-10 21:28:35 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@18692e80
2024-07-10 21:28:35 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@779b4f9c
2024-07-10 21:28:35 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@779b4f9c
2024-07-10 21:28:35 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@31fe0ce5
2024-07-10 21:28:35 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@31fe0ce5
2024-07-10 21:28:35 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@31fe0ce5
2024-07-10 21:28:35 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@178dc733
2024-07-10 21:28:35 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@178dc733
2024-07-10 21:28:35 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@178dc733
2024-07-10 21:28:35 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4641f66c
2024-07-10 21:28:35 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4641f66c
2024-07-10 21:28:35 - Adding type registration image -> org.hibernate.type.BasicTypeReference@6b0ba697
2024-07-10 21:28:35 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2a531637
2024-07-10 21:28:35 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2a531637
2024-07-10 21:28:35 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@539ee811
2024-07-10 21:28:35 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1aa59698
2024-07-10 21:28:35 - Adding type registration short -> org.hibernate.type.BasicTypeReference@2cacb445
2024-07-10 21:28:35 - Adding type registration short -> org.hibernate.type.BasicTypeReference@2cacb445
2024-07-10 21:28:35 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2cacb445
2024-07-10 21:28:35 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1e7cfd49
2024-07-10 21:28:35 - Adding type registration int -> org.hibernate.type.BasicTypeReference@1e7cfd49
2024-07-10 21:28:35 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1e7cfd49
2024-07-10 21:28:35 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3a8640f7
2024-07-10 21:28:35 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3a8640f7
2024-07-10 21:28:35 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3a8640f7
2024-07-10 21:28:35 - Adding type registration float -> org.hibernate.type.BasicTypeReference@ca10069
2024-07-10 21:28:35 - Adding type registration float -> org.hibernate.type.BasicTypeReference@ca10069
2024-07-10 21:28:35 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@ca10069
2024-07-10 21:28:35 - Adding type registration double -> org.hibernate.type.BasicTypeReference@45e69324
2024-07-10 21:28:35 - Adding type registration double -> org.hibernate.type.BasicTypeReference@45e69324
2024-07-10 21:28:35 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@45e69324
2024-07-10 21:28:35 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c89b864
2024-07-10 21:28:35 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c89b864
2024-07-10 21:28:35 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3400d6fa
2024-07-10 21:28:35 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3400d6fa
2024-07-10 21:28:35 - Adding type registration character -> org.hibernate.type.BasicTypeReference@30a62a5b
2024-07-10 21:28:35 - Adding type registration char -> org.hibernate.type.BasicTypeReference@30a62a5b
2024-07-10 21:28:35 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@30a62a5b
2024-07-10 21:28:35 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@41a8f0d8
2024-07-10 21:28:35 - Adding type registration string -> org.hibernate.type.BasicTypeReference@30133a11
2024-07-10 21:28:35 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@30133a11
2024-07-10 21:28:35 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2168def
2024-07-10 21:28:35 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3639b04
2024-07-10 21:28:35 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3639b04
2024-07-10 21:28:35 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3639b04
2024-07-10 21:28:35 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5cb8580
2024-07-10 21:28:35 - Adding type registration text -> org.hibernate.type.BasicTypeReference@2ca1e49a
2024-07-10 21:28:35 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1aee6d14
2024-07-10 21:28:35 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@54a6ef6
2024-07-10 21:28:35 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@54a6ef6
2024-07-10 21:28:35 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5c740c5a
2024-07-10 21:28:35 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5c740c5a
2024-07-10 21:28:35 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7fd2a67a
2024-07-10 21:28:35 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@163df259
2024-07-10 21:28:35 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@405603b6
2024-07-10 21:28:35 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3c3cd13a
2024-07-10 21:28:35 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@56b751b1
2024-07-10 21:28:35 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2f61de04
2024-07-10 21:28:35 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5f5a33ed
2024-07-10 21:28:35 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5f5a33ed
2024-07-10 21:28:35 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5b59c3d
2024-07-10 21:28:35 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5b59c3d
2024-07-10 21:28:35 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@69e36fe3
2024-07-10 21:28:35 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@69e36fe3
2024-07-10 21:28:35 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@48d31d25
2024-07-10 21:28:35 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@48d31d25
2024-07-10 21:28:35 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@46188a89
2024-07-10 21:28:35 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@46188a89
2024-07-10 21:28:35 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6f65a203
2024-07-10 21:28:35 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1d0b447b
2024-07-10 21:28:35 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4de158ca
2024-07-10 21:28:35 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4de158ca
2024-07-10 21:28:35 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4f2fdf3d
2024-07-10 21:28:35 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@d180961
2024-07-10 21:28:35 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4af7ac25
2024-07-10 21:28:35 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@d978ab9
2024-07-10 21:28:35 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@d978ab9
2024-07-10 21:28:35 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3cf06a01
2024-07-10 21:28:35 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@71ee2fff
2024-07-10 21:28:35 - Adding type registration date -> org.hibernate.type.BasicTypeReference@68f2363
2024-07-10 21:28:35 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@68f2363
2024-07-10 21:28:35 - Adding type registration time -> org.hibernate.type.BasicTypeReference@37fca349
2024-07-10 21:28:35 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@37fca349
2024-07-10 21:28:35 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@86377d5
2024-07-10 21:28:35 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@86377d5
2024-07-10 21:28:35 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@86377d5
2024-07-10 21:28:35 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@87220f1
2024-07-10 21:28:35 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@87220f1
2024-07-10 21:28:35 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@87220f1
2024-07-10 21:28:35 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@77998ea7
2024-07-10 21:28:35 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@252d8df6
2024-07-10 21:28:35 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@36638b59
2024-07-10 21:28:35 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@36638b59
2024-07-10 21:28:35 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2f8f40cc
2024-07-10 21:28:35 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2f8f40cc
2024-07-10 21:28:35 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2f8f40cc
2024-07-10 21:28:35 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@14d81f2c
2024-07-10 21:28:35 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5dd3727c
2024-07-10 21:28:35 - Adding type registration class -> org.hibernate.type.BasicTypeReference@774013dc
2024-07-10 21:28:35 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@774013dc
2024-07-10 21:28:35 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@229cb4d8
2024-07-10 21:28:35 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@229cb4d8
2024-07-10 21:28:35 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@229cb4d8
2024-07-10 21:28:35 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@30ef32eb
2024-07-10 21:28:35 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@30ef32eb
2024-07-10 21:28:35 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@474619d9
2024-07-10 21:28:35 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@474619d9
2024-07-10 21:28:35 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@bb5f9d
2024-07-10 21:28:35 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@bb5f9d
2024-07-10 21:28:35 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@391dfe7c
2024-07-10 21:28:35 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@391dfe7c
2024-07-10 21:28:35 - Adding type registration url -> org.hibernate.type.BasicTypeReference@702cfbde
2024-07-10 21:28:35 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@702cfbde
2024-07-10 21:28:35 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@7d3bcd3
2024-07-10 21:28:35 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5dce5c03
2024-07-10 21:28:35 - Adding type registration object -> org.hibernate.type.JavaObjectType@69a76b74
2024-07-10 21:28:35 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@69a76b74
2024-07-10 21:28:35 - Adding type registration null -> org.hibernate.type.NullType@153c6603
2024-07-10 21:28:35 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@24e2355c
2024-07-10 21:28:35 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@19739906
2024-07-10 21:28:35 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@65503a26
2024-07-10 21:28:35 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@13aa54f1
2024-07-10 21:28:35 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@26d7cb0d
2024-07-10 21:28:35 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23e9dd78
2024-07-10 21:28:35 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@470c4229
2024-07-10 21:28:35 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6408be5
2024-07-10 21:28:35 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2fafa7b5] into BootstrapContext; was [null]
2024-07-10 21:28:35 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2fafa7b5) [was null]
2024-07-10 21:28:35 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@24dc150c] into BootstrapContext; was [null]
2024-07-10 21:28:35 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1d2d4d7a] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5e020dd1]
2024-07-10 21:28:35 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 21:28:35 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2fafa7b5]
2024-07-10 21:28:35 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2fafa7b5]
2024-07-10 21:28:35 - Database ->
	   name : H2
	version : 2.2.224 (2023-09-17)
	  major : 2
	  minor : 2
2024-07-10 21:28:35 - Driver ->
	   name : H2 JDBC Driver
	version : 2.2.224 (2023-09-17)
	  major : 2
	  minor : 2
2024-07-10 21:28:35 - JDBC version : 4.2
2024-07-10 21:28:35 - HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 2.2.224
2024-07-10 21:28:35 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-07-10 21:28:35 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-10 21:28:35 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-10 21:28:35 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-10 21:28:35 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 21:28:35 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 21:28:35 - addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2024-07-10 21:28:35 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-10 21:28:35 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-10 21:28:35 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-10 21:28:35 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@641bc9a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1d40f597]
2024-07-10 21:28:35 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-10 21:28:35 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-10 21:28:35 - Import with entity name Task
2024-07-10 21:28:35 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-10 21:28:35 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-10 21:28:35 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-10 21:28:35 - MetadataSourceProcessor property id with lazy=false
2024-07-10 21:28:35 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-10 21:28:35 - building BasicValue for id
2024-07-10 21:28:35 - Skipping column re-registration: task.id
2024-07-10 21:28:35 - Building property id
2024-07-10 21:28:35 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - MetadataSourceProcessor property category with lazy=false
2024-07-10 21:28:35 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-10 21:28:35 - building BasicValue for category
2024-07-10 21:28:35 - Skipping column re-registration: task.category
2024-07-10 21:28:35 - Building property category
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-10 21:28:35 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-10 21:28:35 - building BasicValue for createdAt
2024-07-10 21:28:35 - Skipping column re-registration: task.created_at
2024-07-10 21:28:35 - Building property createdAt
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - MetadataSourceProcessor property description with lazy=false
2024-07-10 21:28:35 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-10 21:28:35 - building BasicValue for description
2024-07-10 21:28:35 - Skipping column re-registration: task.description
2024-07-10 21:28:35 - Building property description
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - MetadataSourceProcessor property priority with lazy=false
2024-07-10 21:28:35 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-10 21:28:35 - building BasicValue for priority
2024-07-10 21:28:35 - Skipping column re-registration: task.priority
2024-07-10 21:28:35 - Building property priority
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - MetadataSourceProcessor property title with lazy=false
2024-07-10 21:28:35 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-10 21:28:35 - building BasicValue for title
2024-07-10 21:28:35 - Skipping column re-registration: task.title
2024-07-10 21:28:35 - Building property title
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-10 21:28:35 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-10 21:28:35 - building BasicValue for updatedAt
2024-07-10 21:28:35 - Skipping column re-registration: task.updated_at
2024-07-10 21:28:35 - Building property updatedAt
2024-07-10 21:28:35 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - Building property user
2024-07-10 21:28:35 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-10 21:28:35 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-10 21:28:35 - Import with entity name User
2024-07-10 21:28:35 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-10 21:28:35 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-10 21:28:35 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-10 21:28:35 - MetadataSourceProcessor property id with lazy=false
2024-07-10 21:28:35 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-10 21:28:35 - building BasicValue for id
2024-07-10 21:28:35 - Skipping column re-registration: users.id
2024-07-10 21:28:35 - Building property id
2024-07-10 21:28:35 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - MetadataSourceProcessor property email with lazy=false
2024-07-10 21:28:35 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-10 21:28:35 - building BasicValue for email
2024-07-10 21:28:35 - Skipping column re-registration: users.email
2024-07-10 21:28:35 - Building property email
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - MetadataSourceProcessor property password with lazy=false
2024-07-10 21:28:35 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-10 21:28:35 - building BasicValue for password
2024-07-10 21:28:35 - Skipping column re-registration: users.password
2024-07-10 21:28:35 - Building property password
2024-07-10 21:28:35 - Binding column: AnnotatedJoinColumn()
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-10 21:28:35 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-10 21:28:35 - Binding column: AnnotatedJoinColumn()
2024-07-10 21:28:35 - Binding column: AnnotatedJoinColumn()
2024-07-10 21:28:35 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-10 21:28:35 - Building property tasks
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - MetadataSourceProcessor property username with lazy=false
2024-07-10 21:28:35 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-10 21:28:35 - building BasicValue for username
2024-07-10 21:28:35 - Skipping column re-registration: users.username
2024-07-10 21:28:35 - Building property username
2024-07-10 21:28:35 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-10 21:28:35 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-10 21:28:35 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-10 21:28:35 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-10 21:28:35 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-10 21:28:35 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-10 21:28:35 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-10 21:28:35 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-10 21:28:35 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-10 21:28:35 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-10 21:28:35 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-10 21:28:35 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-10 21:28:35 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-10 21:28:35 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-10 21:28:35 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-10 21:28:35 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-10 21:28:35 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-10 21:28:35 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-10 21:28:35 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-10 21:28:35 - Building session factory
2024-07-10 21:28:35 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-10 21:28:35 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7272914b, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@663f24e6, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.15615143019634930830, com.sun.management.jmxremote.port=60666, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=14520, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.15615143019634930830, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@7e532f2d, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-10 21:28:35 - Session factory constructed with filter configurations : {}
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3055f310] under count; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@149238fe] under every; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@a0bdbe2] under any; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f64f99f] under sinh; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16c1d11] under cosh; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@123d0816] under tanh; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4601a148] under pi; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e210016] under log; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-10 21:28:35 - Registering alternate key : length -> character_length
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6fe337a5] under position; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@34001c5d] under overlay; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@618e7761] under trim; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@73230721] under cast; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@10bcbbce] under collate; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@cbc3bf3] under extract; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3fdede3a] under ifnull; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2bc0603f] under pad; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2b4ba2d9] under str; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@62525dd3] under format; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@18301763] under timestampadd; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@448fa659] under timestampdiff; prior registration was null
2024-07-10 21:28:35 - Registering alternate key : dateadd -> timestampadd
2024-07-10 21:28:35 - Registering alternate key : datediff -> timestampdiff
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1a6a4595] under current_date; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b1b2255] under current_time; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4965454c] under current_timestamp; prior registration was null
2024-07-10 21:28:35 - Registering alternate key : current date -> current_date
2024-07-10 21:28:35 - Registering alternate key : current time -> current_time
2024-07-10 21:28:35 - Registering alternate key : current timestamp -> current_timestamp
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1e4a4ed5] under local_date; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5644f664] under local_time; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@445f6f73] under local_datetime; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@27f31d91] under offset_datetime; prior registration was null
2024-07-10 21:28:35 - Registering alternate key : local date -> local_date
2024-07-10 21:28:35 - Registering alternate key : local time -> local_time
2024-07-10 21:28:35 - Registering alternate key : local datetime -> local_datetime
2024-07-10 21:28:35 - Registering alternate key : offset datetime -> offset_datetime
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6b03c35c] under instant; prior registration was null
2024-07-10 21:28:35 - Registering alternate key : current_instant -> instant
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6f5288c5] under sql; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5a9ef32e] under count; prior registration was org.hibernate.dialect.function.CountFunction@3055f310
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@37b5a51c] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4601a148
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e782401] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitnot)] under bitnot; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2024-07-10 21:28:35 - Registering alternate key : day -> day_of_month
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5644f664
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@445f6f73
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@6d8096ee] under trunc; prior registration was null
2024-07-10 21:28:35 - Registering alternate key : truncate -> trunc
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@35d8ba22] under date_trunc; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2024-07-10 21:28:35 - Registering alternate key : chr -> char
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3fc051ce] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6fe337a5
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5bb37d] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-07-10 21:28:35 - Registering alternate key : every -> bool_and
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-07-10 21:28:35 - Registering alternate key : any -> bool_or
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@558575fe] under format; prior registration was org.hibernate.dialect.function.FormatFunction@62525dd3
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@4423692a] under listagg; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@72406594] under mode; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4e1104f4] under percentile_cont; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@76219fe] under percentile_disc; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7ea8224b] under rank; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5a010eec] under dense_rank; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@623ded82] under percent_rank; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@180e33b0] under cume_dist; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConstructorFunction@4056cdb2] under array; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConstructorFunction@20462820] under array_list; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@5f14590c] under array_agg; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionFunction@257d3968] under array_position; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionsFunction@524dd373] under array_positions; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionsFunction@3d213a2b] under array_positions_list; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27691ee8] under array_length; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatFunction@5ec3689b] under array_concat; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatElementFunction@45964b9e] under array_prepend; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatElementFunction@166a5659] under array_append; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayContainsFunction@22ea6051] under array_contains; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayContainsFunction@539bb233] under array_contains_nullable; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayOverlapsFunction@7df23848] under array_overlaps; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayOverlapsFunction@1b120d48] under array_overlaps_nullable; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73417494] under array_get; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArraySetFunction@76ee7301] under array_set; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayRemoveFunction@4d4bac56] under array_remove; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayRemoveIndexFunction@15aaf7b1] under array_remove_index; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a22c1ba] under array_slice; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayReplaceFunction@8ad6d29] under array_replace; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ad6aeb8] under array_trim; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayFillFunction@c79915a] under array_fill; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayFillFunction@6173863f] under array_fill_list; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayToStringFunction@23119bc3] under array_to_string; prior registration was null
2024-07-10 21:28:35 - abs(NUMERIC arg)
2024-07-10 21:28:35 - Double acos(NUMERIC arg)
2024-07-10 21:28:35 - Boolean any(BOOLEAN predicate)
2024-07-10 21:28:35 - array( ... )
2024-07-10 21:28:35 - array_agg(arg)
2024-07-10 21:28:35 - array_append( ... )
2024-07-10 21:28:35 - array_concat( ... )
2024-07-10 21:28:35 - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-07-10 21:28:35 - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-07-10 21:28:35 - array_fill(OBJECT element, INTEGER elementCount)
2024-07-10 21:28:35 - array_fill_list(OBJECT element, INTEGER elementCount)
2024-07-10 21:28:35 - array_get(ARRAY array, INTEGER index)
2024-07-10 21:28:35 - Integer array_length(ARRAY array)
2024-07-10 21:28:35 - array_list( ... )
2024-07-10 21:28:35 - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-07-10 21:28:35 - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-07-10 21:28:35 - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-07-10 21:28:35 - int[] array_positions(ARRAY array, OBJECT element)
2024-07-10 21:28:35 - List array_positions_list(ARRAY array, OBJECT element)
2024-07-10 21:28:35 - array_prepend( ... )
2024-07-10 21:28:35 - array_remove( ... )
2024-07-10 21:28:35 - array_remove_index( ... )
2024-07-10 21:28:35 - array_replace( ... )
2024-07-10 21:28:35 - array_set( ... )
2024-07-10 21:28:35 - array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-07-10 21:28:35 - String array_to_string( ... )
2024-07-10 21:28:35 - array_trim(ARRAY array, INTEGER elementsToRemove)
2024-07-10 21:28:35 - Integer ascii(STRING arg)
2024-07-10 21:28:35 - Double asin(NUMERIC arg)
2024-07-10 21:28:35 - Double atan(NUMERIC arg)
2024-07-10 21:28:35 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-10 21:28:35 - avg(NUMERIC arg)
2024-07-10 21:28:35 - bit_and(arg)
2024-07-10 21:28:35 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-10 21:28:35 - bit_or(arg)
2024-07-10 21:28:35 - bitand(arg0, arg1)
2024-07-10 21:28:35 - bitnot(arg)
2024-07-10 21:28:35 - bitor(arg0, arg1)
2024-07-10 21:28:35 - bitxor(arg0, arg1)
2024-07-10 21:28:35 - Boolean bool_and(BOOLEAN predicate)
2024-07-10 21:28:35 - Boolean bool_or(BOOLEAN predicate)
2024-07-10 21:28:35 - cast(arg as Type)
2024-07-10 21:28:35 - ceiling(NUMERIC arg)
2024-07-10 21:28:35 - Character char(INTEGER arg)
2024-07-10 21:28:35 - Integer character_length(STRING_OR_CLOB arg)
2024-07-10 21:28:35 - Character chr(INTEGER arg)
2024-07-10 21:28:35 - coalesce(arg0[, arg1[, ...]])
2024-07-10 21:28:35 - String collate(STRING string as COLLATION collation)
2024-07-10 21:28:35 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-10 21:28:35 - Double cos(NUMERIC arg)
2024-07-10 21:28:35 - Double cosh(NUMERIC arg)
2024-07-10 21:28:35 - Double cot(NUMERIC arg)
2024-07-10 21:28:35 - Long count([distinct ]{arg|*})
2024-07-10 21:28:35 - Double cume_dist([arg0[, ...]])
2024-07-10 21:28:35 - Date curdate()
2024-07-10 21:28:35 - Date current date
2024-07-10 21:28:35 - Time current time
2024-07-10 21:28:35 - Timestamp current timestamp
2024-07-10 21:28:35 - Date current_date
2024-07-10 21:28:35 - Instant current_instant
2024-07-10 21:28:35 - Time current_time
2024-07-10 21:28:35 - Timestamp current_timestamp
2024-07-10 21:28:35 - Time curtime()
2024-07-10 21:28:35 - date_trunc(STRING field, TEMPORAL datetime)
2024-07-10 21:28:35 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-10 21:28:35 - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-10 21:28:35 - Integer day(DATE arg)
2024-07-10 21:28:35 - Integer day_of_month(DATE arg)
2024-07-10 21:28:35 - Integer day_of_week(DATE arg)
2024-07-10 21:28:35 - Integer day_of_year(DATE arg)
2024-07-10 21:28:35 - String dayname(DATE arg)
2024-07-10 21:28:35 - Double degrees(NUMERIC arg)
2024-07-10 21:28:35 - Long dense_rank([arg0[, ...]])
2024-07-10 21:28:35 - Boolean every(BOOLEAN predicate)
2024-07-10 21:28:35 - Double exp(NUMERIC arg)
2024-07-10 21:28:35 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-10 21:28:35 - first_valueANY value
2024-07-10 21:28:35 - floor(NUMERIC arg)
2024-07-10 21:28:35 - String format(TEMPORAL datetime as STRING pattern)
2024-07-10 21:28:35 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-10 21:28:35 - Integer hour(TIME arg)
2024-07-10 21:28:35 - ifnull(arg0, arg1)
2024-07-10 21:28:35 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-10 21:28:35 - Instant instant
2024-07-10 21:28:35 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-10 21:28:35 - lagANY value[, INTEGER offset[, ANY default]]
2024-07-10 21:28:35 - last_valueANY value
2024-07-10 21:28:35 - leadANY value[, INTEGER offset[, ANY default]]
2024-07-10 21:28:35 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-10 21:28:35 - String left(STRING string, INTEGER length)
2024-07-10 21:28:35 - Integer length(STRING_OR_CLOB arg)
2024-07-10 21:28:35 - String listagg(STRING arg0, STRING arg1)
2024-07-10 21:28:35 - Double ln(NUMERIC arg)
2024-07-10 21:28:35 - LocalDate local date
2024-07-10 21:28:35 - LocalDateTime local datetime
2024-07-10 21:28:35 - LocalTime local time
2024-07-10 21:28:35 - LocalDate local_date
2024-07-10 21:28:35 - LocalDateTime local_datetime
2024-07-10 21:28:35 - LocalTime local_time
2024-07-10 21:28:35 - Time localtime
2024-07-10 21:28:35 - Timestamp localtimestamp
2024-07-10 21:28:35 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-10 21:28:35 - Double log(NUMERIC base, NUMERIC arg)
2024-07-10 21:28:35 - Double log10(NUMERIC arg)
2024-07-10 21:28:35 - String lower(STRING string)
2024-07-10 21:28:35 - String lpad(STRING string, INTEGER length[, STRING padding])
2024-07-10 21:28:35 - String ltrim(STRING string)
2024-07-10 21:28:35 - max(COMPARABLE arg)
2024-07-10 21:28:35 - Double median(NUMERIC arg)
2024-07-10 21:28:35 - Integer microsecond(TIME arg)
2024-07-10 21:28:35 - min(COMPARABLE arg)
2024-07-10 21:28:35 - Integer minute(TIME arg)
2024-07-10 21:28:35 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-10 21:28:35 - mode()
2024-07-10 21:28:35 - Integer month(DATE arg)
2024-07-10 21:28:35 - String monthname(DATE arg)
2024-07-10 21:28:35 - Timestamp now()
2024-07-10 21:28:35 - nth_valueANY value, INTEGER nth
2024-07-10 21:28:35 - nullif(arg0, arg1)
2024-07-10 21:28:35 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-10 21:28:35 - OffsetDateTime offset datetime
2024-07-10 21:28:35 - OffsetDateTime offset_datetime
2024-07-10 21:28:35 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-10 21:28:35 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-10 21:28:35 - Double percent_rank([arg0[, ...]])
2024-07-10 21:28:35 - percentile_cont(NUMERIC arg)
2024-07-10 21:28:35 - percentile_disc(NUMERIC arg)
2024-07-10 21:28:35 - Double pi
2024-07-10 21:28:35 - Integer position(STRING pattern in STRING string)
2024-07-10 21:28:35 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-10 21:28:35 - Integer quarter(DATE arg)
2024-07-10 21:28:35 - Double radians(NUMERIC arg)
2024-07-10 21:28:35 - Double rand([INTEGER seed])
2024-07-10 21:28:35 - Long rank([arg0[, ...]])
2024-07-10 21:28:35 - String repeat(STRING string, INTEGER times)
2024-07-10 21:28:35 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-10 21:28:35 - String right(STRING string, INTEGER length)
2024-07-10 21:28:35 - round(NUMERIC number[, INTEGER places])
2024-07-10 21:28:35 - Long row_number()
2024-07-10 21:28:35 - Long rownum()
2024-07-10 21:28:35 - String rpad(STRING string, INTEGER length[, STRING padding])
2024-07-10 21:28:35 - String rtrim(STRING string)
2024-07-10 21:28:35 - Integer second(TIME arg)
2024-07-10 21:28:35 - Integer sign(NUMERIC arg)
2024-07-10 21:28:35 - Double sin(NUMERIC arg)
2024-07-10 21:28:35 - Double sinh(NUMERIC arg)
2024-07-10 21:28:35 - String soundex(arg)
2024-07-10 21:28:35 - String space(INTEGER arg)
2024-07-10 21:28:35 - Object sql
2024-07-10 21:28:35 - Double sqrt(NUMERIC arg)
2024-07-10 21:28:35 - Double stddev_pop(NUMERIC arg)
2024-07-10 21:28:35 - Double stddev_samp(NUMERIC arg)
2024-07-10 21:28:35 - String str(arg)
2024-07-10 21:28:35 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-10 21:28:35 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-10 21:28:35 - sum(arg)
2024-07-10 21:28:35 - Timestamp sysdate
2024-07-10 21:28:35 - Double tan(NUMERIC arg)
2024-07-10 21:28:35 - Double tanh(NUMERIC arg)
2024-07-10 21:28:35 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-10 21:28:35 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-10 21:28:35 - String translate(STRING arg0, STRING arg1, STRING arg2)
2024-07-10 21:28:35 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-10 21:28:35 - trunc( ... )
2024-07-10 21:28:35 - truncate( ... )
2024-07-10 21:28:35 - String upper(STRING string)
2024-07-10 21:28:35 - Double var_pop(NUMERIC arg)
2024-07-10 21:28:35 - Double var_samp(NUMERIC arg)
2024-07-10 21:28:35 - Integer week(DATE arg)
2024-07-10 21:28:35 - Integer year(DATE arg)
2024-07-10 21:28:35 - Starting QueryInterpretationCache(2048)
2024-07-10 21:28:35 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-10 21:28:35 - Configured EntityCopyObserver strategy: disallow
2024-07-10 21:28:35 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-10 21:28:35 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-10 21:28:36 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-10 21:28:36 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-10 21:28:36 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-10 21:28:36 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-10 21:28:36 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-10 21:28:36 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-10 21:28:36 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-10 21:28:36 - Starting post-init callbacks
2024-07-10 21:28:36 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-10 21:28:36 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-10 21:28:36 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-10 21:28:36 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-10 21:28:36 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-10 21:28:36 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-10 21:28:36 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-10 21:28:36 - Created new SQL alias : u1_0
2024-07-10 21:28:36 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-10 21:28:36 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-10 21:28:36 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-10 21:28:36 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-10 21:28:36 -  Version select: select id from users where id=?
2024-07-10 21:28:36 -  Insert (0): insert into users (email,password,username,id) values (?,?,?,default)
2024-07-10 21:28:36 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-10 21:28:36 -  Delete (0): delete from users where id=?
2024-07-10 21:28:36 - Created new SQL alias : t1_0
2024-07-10 21:28:36 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-10 21:28:36 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e8bc83e] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-10 21:28:36 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-10 21:28:36 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-10 21:28:36 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-10 21:28:36 -  Version select: select id from task where id=?
2024-07-10 21:28:36 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id,id) values (?,?,?,?,?,?,?,default)
2024-07-10 21:28:36 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-10 21:28:36 -  Delete (0): delete from task where id=?
2024-07-10 21:28:36 - Created new SQL alias : t1_0
2024-07-10 21:28:36 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@39f3285d] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-10 21:28:36 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-10 21:28:36 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6dcdc378] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-10 21:28:36 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-10 21:28:36 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-10 21:28:36 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-10 21:28:36 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 21:28:36 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@641bc9a8] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@18c95fbb]
2024-07-10 21:28:36 - Checking 0 named HQL queries
2024-07-10 21:28:36 - Checking 0 named SQL queries
2024-07-10 21:28:36 - drop table if exists task cascade 
2024-07-10 21:28:36 - drop table if exists users cascade 
2024-07-10 21:28:36 - create table task (created_at timestamp(6), id bigint generated by default as identity, updated_at timestamp(6), user_id bigint, category varchar(255), description varchar(255), priority varchar(255), title varchar(255), primary key (id))
2024-07-10 21:28:36 - create table users (id bigint generated by default as identity, email varchar(255), password varchar(255), username varchar(255), primary key (id))
2024-07-10 21:28:36 - alter table if exists task add constraint FKbhwpp8tr117vvbxhf5sbkdkc9 foreign key (user_id) references users
2024-07-10 21:28:36 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@125c03d3
2024-07-10 21:28:36 - Registering SessionFactory: 47c4590e-d692-4c5e-8e21-fec669738fce (<unnamed>)
2024-07-10 21:28:36 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-10 21:28:36 - Instantiated SessionFactory
2024-07-10 21:28:36 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 21:28:36 - Statistics initialized [enabled=false]
2024-07-10 21:28:36 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:28:36 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:28:36 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:28:36 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:28:36 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 21:28:36 - 

Using generated security password: 1f48672a-3abf-46ce-a2b5-86c89e2f5a10

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-10 21:28:36 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-10 21:28:37 - 11 mappings in 'requestMappingHandlerMapping'
2024-07-10 21:28:37 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-10 21:28:37 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-10 21:28:37 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-10 21:28:37 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-10 21:28:37 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-10 21:28:38 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-10 21:28:38 - Tomcat started on port 8080 (http) with context path '/'
2024-07-10 21:28:38 - Started TaskmanagementApplication in 6.258 seconds (process running for 6.776)
2024-07-10 21:28:38 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 21:28:38 - Initializing Servlet 'dispatcherServlet'
2024-07-10 21:28:38 - Detected StandardServletMultipartResolver
2024-07-10 21:28:38 - Detected AcceptHeaderLocaleResolver
2024-07-10 21:28:38 - Detected FixedThemeResolver
2024-07-10 21:28:38 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7d4bb16b
2024-07-10 21:28:38 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4756c8f3
2024-07-10 21:28:38 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-10 21:28:38 - Completed initialization in 1 ms
2024-07-10 21:28:44 - Starting TaskmanagementApplication using Java 22.0.1 with PID 19708 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-10 21:28:44 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 21:28:45 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 21:28:45 - Finished Spring Data repository scanning in 52 ms. Found 2 JPA repository interfaces.
2024-07-10 21:28:46 - Tomcat initialized with port 8080 (http)
2024-07-10 21:28:46 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-10 21:28:46 - Starting service [Tomcat]
2024-07-10 21:28:46 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 21:28:46 - Initializing Spring embedded WebApplicationContext
2024-07-10 21:28:46 - Root WebApplicationContext: initialization completed in 2090 ms
2024-07-10 21:28:46 - Filter 'webMvcObservationFilter' configured for use
2024-07-10 21:28:46 - HikariPool-1 - Starting...
2024-07-10 21:28:47 - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:a2a0a7bb-4c10-4dd5-89bb-b0384a200dbd user=SA
2024-07-10 21:28:47 - HikariPool-1 - Start completed.
2024-07-10 21:28:47 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/Assignment%201%20Spring%20Boot/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-10 21:28:47 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-10 21:28:47 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-10 21:28:47 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 21:28:47 - HHH000206: 'hibernate.properties' not found
2024-07-10 21:28:47 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-10 21:28:47 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-10 21:28:47 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-10 21:28:47 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-10 21:28:47 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-10 21:28:47 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-10 21:28:47 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-10 21:28:47 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-10 21:28:47 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-10 21:28:47 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-10 21:28:47 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-10 21:28:47 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-10 21:28:47 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-10 21:28:47 - HHH000026: Second-level cache disabled
2024-07-10 21:28:47 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@19c1f6f4
2024-07-10 21:28:47 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@19c1f6f4
2024-07-10 21:28:47 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@19c1f6f4
2024-07-10 21:28:47 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@46fa2a7e
2024-07-10 21:28:47 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@46fa2a7e
2024-07-10 21:28:47 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3d02ff64
2024-07-10 21:28:47 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3d02ff64
2024-07-10 21:28:47 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6f17dd06
2024-07-10 21:28:47 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6f17dd06
2024-07-10 21:28:47 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7977f046
2024-07-10 21:28:47 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7977f046
2024-07-10 21:28:47 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7977f046
2024-07-10 21:28:47 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6ec98ccc
2024-07-10 21:28:47 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6ec98ccc
2024-07-10 21:28:47 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6ec98ccc
2024-07-10 21:28:47 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@441aa7ae
2024-07-10 21:28:47 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@441aa7ae
2024-07-10 21:28:47 - Adding type registration image -> org.hibernate.type.BasicTypeReference@1534bdc6
2024-07-10 21:28:47 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@53079ae6
2024-07-10 21:28:47 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@53079ae6
2024-07-10 21:28:47 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@718ad3a6
2024-07-10 21:28:47 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@603c2dee
2024-07-10 21:28:47 - Adding type registration short -> org.hibernate.type.BasicTypeReference@50d666a2
2024-07-10 21:28:47 - Adding type registration short -> org.hibernate.type.BasicTypeReference@50d666a2
2024-07-10 21:28:47 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@50d666a2
2024-07-10 21:28:47 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3f6906f4
2024-07-10 21:28:47 - Adding type registration int -> org.hibernate.type.BasicTypeReference@3f6906f4
2024-07-10 21:28:47 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3f6906f4
2024-07-10 21:28:47 - Adding type registration long -> org.hibernate.type.BasicTypeReference@1859e55c
2024-07-10 21:28:47 - Adding type registration long -> org.hibernate.type.BasicTypeReference@1859e55c
2024-07-10 21:28:47 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1859e55c
2024-07-10 21:28:47 - Adding type registration float -> org.hibernate.type.BasicTypeReference@190bf8e4
2024-07-10 21:28:47 - Adding type registration float -> org.hibernate.type.BasicTypeReference@190bf8e4
2024-07-10 21:28:47 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@190bf8e4
2024-07-10 21:28:47 - Adding type registration double -> org.hibernate.type.BasicTypeReference@7a8b7e11
2024-07-10 21:28:47 - Adding type registration double -> org.hibernate.type.BasicTypeReference@7a8b7e11
2024-07-10 21:28:47 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7a8b7e11
2024-07-10 21:28:47 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@d229912
2024-07-10 21:28:47 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@d229912
2024-07-10 21:28:47 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5a06eeef
2024-07-10 21:28:47 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5a06eeef
2024-07-10 21:28:47 - Adding type registration character -> org.hibernate.type.BasicTypeReference@1c0cf193
2024-07-10 21:28:47 - Adding type registration char -> org.hibernate.type.BasicTypeReference@1c0cf193
2024-07-10 21:28:47 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1c0cf193
2024-07-10 21:28:47 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3dd66ff5
2024-07-10 21:28:47 - Adding type registration string -> org.hibernate.type.BasicTypeReference@24258b54
2024-07-10 21:28:47 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@24258b54
2024-07-10 21:28:47 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@493968a9
2024-07-10 21:28:47 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@32428874
2024-07-10 21:28:47 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@32428874
2024-07-10 21:28:47 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@32428874
2024-07-10 21:28:47 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3c65f00e
2024-07-10 21:28:47 - Adding type registration text -> org.hibernate.type.BasicTypeReference@3412a3fd
2024-07-10 21:28:47 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@36ecf9f6
2024-07-10 21:28:47 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@104bc677
2024-07-10 21:28:47 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@104bc677
2024-07-10 21:28:47 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3bda1f0
2024-07-10 21:28:47 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3bda1f0
2024-07-10 21:28:47 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2211e731
2024-07-10 21:28:47 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@73e399cc
2024-07-10 21:28:47 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3dd591b9
2024-07-10 21:28:47 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@538905d2
2024-07-10 21:28:47 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7e8c58fd
2024-07-10 21:28:47 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@11ce9319
2024-07-10 21:28:47 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@780c0
2024-07-10 21:28:47 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@780c0
2024-07-10 21:28:47 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1b3bb287
2024-07-10 21:28:47 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1b3bb287
2024-07-10 21:28:47 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7ec5aad
2024-07-10 21:28:47 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7ec5aad
2024-07-10 21:28:47 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@625f5712
2024-07-10 21:28:47 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@625f5712
2024-07-10 21:28:47 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5e62ca19
2024-07-10 21:28:47 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5e62ca19
2024-07-10 21:28:47 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@188bf4d8
2024-07-10 21:28:47 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7dd7ec56
2024-07-10 21:28:47 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6528d339
2024-07-10 21:28:47 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6528d339
2024-07-10 21:28:47 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2dd2ff87
2024-07-10 21:28:47 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6a38e3d1
2024-07-10 21:28:47 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@28cf179c
2024-07-10 21:28:47 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bdda8a7
2024-07-10 21:28:47 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bdda8a7
2024-07-10 21:28:47 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3149409c
2024-07-10 21:28:47 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1c421b0f
2024-07-10 21:28:47 - Adding type registration date -> org.hibernate.type.BasicTypeReference@4ce18cec
2024-07-10 21:28:47 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4ce18cec
2024-07-10 21:28:47 - Adding type registration time -> org.hibernate.type.BasicTypeReference@2a9f8d47
2024-07-10 21:28:47 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2a9f8d47
2024-07-10 21:28:47 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@51297528
2024-07-10 21:28:47 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@51297528
2024-07-10 21:28:47 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@51297528
2024-07-10 21:28:47 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5d3f8661
2024-07-10 21:28:47 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5d3f8661
2024-07-10 21:28:47 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5d3f8661
2024-07-10 21:28:47 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1df9f7c6
2024-07-10 21:28:47 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4b5aa48b
2024-07-10 21:28:47 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@51c008fd
2024-07-10 21:28:47 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@51c008fd
2024-07-10 21:28:47 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@70ed902a
2024-07-10 21:28:47 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@70ed902a
2024-07-10 21:28:47 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@70ed902a
2024-07-10 21:28:47 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@22f80e36
2024-07-10 21:28:47 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3c98981e
2024-07-10 21:28:47 - Adding type registration class -> org.hibernate.type.BasicTypeReference@6dcee890
2024-07-10 21:28:47 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6dcee890
2024-07-10 21:28:47 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@713e49c3
2024-07-10 21:28:47 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@713e49c3
2024-07-10 21:28:47 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@713e49c3
2024-07-10 21:28:47 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6bf54260
2024-07-10 21:28:47 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6bf54260
2024-07-10 21:28:47 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7165bde6
2024-07-10 21:28:47 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7165bde6
2024-07-10 21:28:47 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@72168258
2024-07-10 21:28:47 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@72168258
2024-07-10 21:28:47 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4af84a76
2024-07-10 21:28:47 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4af84a76
2024-07-10 21:28:47 - Adding type registration url -> org.hibernate.type.BasicTypeReference@b5ff70b
2024-07-10 21:28:47 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@b5ff70b
2024-07-10 21:28:47 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5709e10b
2024-07-10 21:28:47 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@114badf0
2024-07-10 21:28:47 - Adding type registration object -> org.hibernate.type.JavaObjectType@7028b5cc
2024-07-10 21:28:47 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7028b5cc
2024-07-10 21:28:47 - Adding type registration null -> org.hibernate.type.NullType@2ace1cd3
2024-07-10 21:28:47 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5e46a125
2024-07-10 21:28:47 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5831989d
2024-07-10 21:28:47 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@608f310a
2024-07-10 21:28:47 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3a7d914c
2024-07-10 21:28:47 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@515940af
2024-07-10 21:28:47 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5f8df69
2024-07-10 21:28:47 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1ce6a9bd
2024-07-10 21:28:47 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4a47bc9c
2024-07-10 21:28:47 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5d15789f] into BootstrapContext; was [null]
2024-07-10 21:28:47 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5d15789f) [was null]
2024-07-10 21:28:47 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@21688427] into BootstrapContext; was [null]
2024-07-10 21:28:47 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@656c5818] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3e2578ea]
2024-07-10 21:28:47 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 21:28:47 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5d15789f]
2024-07-10 21:28:47 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5d15789f]
2024-07-10 21:28:47 - Database ->
	   name : H2
	version : 2.2.224 (2023-09-17)
	  major : 2
	  minor : 2
2024-07-10 21:28:47 - Driver ->
	   name : H2 JDBC Driver
	version : 2.2.224 (2023-09-17)
	  major : 2
	  minor : 2
2024-07-10 21:28:47 - JDBC version : 4.2
2024-07-10 21:28:47 - HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 2.2.224
2024-07-10 21:28:47 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-07-10 21:28:47 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-10 21:28:47 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-10 21:28:47 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-10 21:28:47 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 21:28:47 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 21:28:47 - addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2024-07-10 21:28:47 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-10 21:28:47 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-10 21:28:47 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-10 21:28:47 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@744f0e0b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4136b193]
2024-07-10 21:28:47 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-10 21:28:47 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-10 21:28:47 - Import with entity name Task
2024-07-10 21:28:47 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-10 21:28:47 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-10 21:28:47 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-10 21:28:47 - MetadataSourceProcessor property id with lazy=false
2024-07-10 21:28:47 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-10 21:28:47 - building BasicValue for id
2024-07-10 21:28:47 - Skipping column re-registration: task.id
2024-07-10 21:28:47 - Building property id
2024-07-10 21:28:47 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - MetadataSourceProcessor property category with lazy=false
2024-07-10 21:28:47 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-10 21:28:47 - building BasicValue for category
2024-07-10 21:28:47 - Skipping column re-registration: task.category
2024-07-10 21:28:47 - Building property category
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-10 21:28:47 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-10 21:28:47 - building BasicValue for createdAt
2024-07-10 21:28:47 - Skipping column re-registration: task.created_at
2024-07-10 21:28:47 - Building property createdAt
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - MetadataSourceProcessor property description with lazy=false
2024-07-10 21:28:47 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-10 21:28:47 - building BasicValue for description
2024-07-10 21:28:47 - Skipping column re-registration: task.description
2024-07-10 21:28:47 - Building property description
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - MetadataSourceProcessor property priority with lazy=false
2024-07-10 21:28:47 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-10 21:28:47 - building BasicValue for priority
2024-07-10 21:28:47 - Skipping column re-registration: task.priority
2024-07-10 21:28:47 - Building property priority
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - MetadataSourceProcessor property title with lazy=false
2024-07-10 21:28:47 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-10 21:28:47 - building BasicValue for title
2024-07-10 21:28:47 - Skipping column re-registration: task.title
2024-07-10 21:28:47 - Building property title
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-10 21:28:47 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-10 21:28:47 - building BasicValue for updatedAt
2024-07-10 21:28:47 - Skipping column re-registration: task.updated_at
2024-07-10 21:28:47 - Building property updatedAt
2024-07-10 21:28:47 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - Building property user
2024-07-10 21:28:47 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-10 21:28:47 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-10 21:28:47 - Import with entity name User
2024-07-10 21:28:47 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-10 21:28:47 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-10 21:28:47 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-10 21:28:47 - MetadataSourceProcessor property id with lazy=false
2024-07-10 21:28:47 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-10 21:28:47 - building BasicValue for id
2024-07-10 21:28:47 - Skipping column re-registration: users.id
2024-07-10 21:28:47 - Building property id
2024-07-10 21:28:47 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - MetadataSourceProcessor property email with lazy=false
2024-07-10 21:28:47 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-10 21:28:47 - building BasicValue for email
2024-07-10 21:28:47 - Skipping column re-registration: users.email
2024-07-10 21:28:47 - Building property email
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - MetadataSourceProcessor property password with lazy=false
2024-07-10 21:28:47 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-10 21:28:47 - building BasicValue for password
2024-07-10 21:28:47 - Skipping column re-registration: users.password
2024-07-10 21:28:47 - Building property password
2024-07-10 21:28:47 - Binding column: AnnotatedJoinColumn()
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-10 21:28:47 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-10 21:28:47 - Binding column: AnnotatedJoinColumn()
2024-07-10 21:28:47 - Binding column: AnnotatedJoinColumn()
2024-07-10 21:28:47 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-10 21:28:47 - Building property tasks
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - MetadataSourceProcessor property username with lazy=false
2024-07-10 21:28:47 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-10 21:28:47 - building BasicValue for username
2024-07-10 21:28:47 - Skipping column re-registration: users.username
2024-07-10 21:28:47 - Building property username
2024-07-10 21:28:47 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-10 21:28:47 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-10 21:28:47 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-10 21:28:47 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-10 21:28:47 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-10 21:28:47 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-10 21:28:47 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-10 21:28:47 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-10 21:28:47 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-10 21:28:47 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-10 21:28:47 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-10 21:28:47 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-10 21:28:47 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-10 21:28:47 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-10 21:28:47 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-10 21:28:47 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-10 21:28:47 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-10 21:28:47 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-10 21:28:47 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-10 21:28:47 - Building session factory
2024-07-10 21:28:47 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-10 21:28:47 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3d6745ed, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@600e2000, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.6433206785057507280, com.sun.management.jmxremote.port=60666, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=19708, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.6433206785057507280, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@797ee1a9, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-10 21:28:47 - Session factory constructed with filter configurations : {}
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4e553d60] under count; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@f26cd76] under every; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@78805df3] under any; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@169d5567] under sinh; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e489957] under cosh; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@68b3de47] under tanh; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b827796] under pi; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27c827ec] under log; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-10 21:28:47 - Registering alternate key : length -> character_length
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5a88849] under position; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@30a4a111] under overlay; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6bec566e] under trim; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@71ac5723] under cast; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7bb3294c] under collate; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@294a3f2a] under extract; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@37a14aa1] under ifnull; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@362fd4e9] under pad; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@629cf53c] under str; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@51bc649e] under format; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@3c65f2e1] under timestampadd; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@13bf5fd] under timestampdiff; prior registration was null
2024-07-10 21:28:47 - Registering alternate key : dateadd -> timestampadd
2024-07-10 21:28:47 - Registering alternate key : datediff -> timestampdiff
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@469bd719] under current_date; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@15405ba1] under current_time; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f6e3b67] under current_timestamp; prior registration was null
2024-07-10 21:28:47 - Registering alternate key : current date -> current_date
2024-07-10 21:28:47 - Registering alternate key : current time -> current_time
2024-07-10 21:28:47 - Registering alternate key : current timestamp -> current_timestamp
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1dc2c13c] under local_date; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@579ee82] under local_time; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@127320df] under local_datetime; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6c3884f5] under offset_datetime; prior registration was null
2024-07-10 21:28:47 - Registering alternate key : local date -> local_date
2024-07-10 21:28:47 - Registering alternate key : local time -> local_time
2024-07-10 21:28:47 - Registering alternate key : local datetime -> local_datetime
2024-07-10 21:28:47 - Registering alternate key : offset datetime -> offset_datetime
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6778636f] under instant; prior registration was null
2024-07-10 21:28:47 - Registering alternate key : current_instant -> instant
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2a317af7] under sql; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7b38db21] under count; prior registration was org.hibernate.dialect.function.CountFunction@4e553d60
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@76bdfc19] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b827796
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1248f83] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitnot)] under bitnot; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2024-07-10 21:28:47 - Registering alternate key : day -> day_of_month
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@579ee82
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@127320df
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@5b0d480c] under trunc; prior registration was null
2024-07-10 21:28:47 - Registering alternate key : truncate -> trunc
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f2169e9] under date_trunc; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2024-07-10 21:28:47 - Registering alternate key : chr -> char
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6689bf04] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5a88849
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b9615cb] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-07-10 21:28:47 - Registering alternate key : every -> bool_and
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-07-10 21:28:47 - Registering alternate key : any -> bool_or
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1aea759d] under format; prior registration was org.hibernate.dialect.function.FormatFunction@51bc649e
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@7891742e] under listagg; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@357e7113] under mode; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@8d23cd8] under percentile_cont; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5feaafb3] under percentile_disc; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7524125c] under rank; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7612f385] under dense_rank; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@330d16af] under percent_rank; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@16f15a4] under cume_dist; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConstructorFunction@4dd425dc] under array; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConstructorFunction@4549d616] under array_list; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@255d4d7] under array_agg; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionFunction@48a38a12] under array_position; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionsFunction@5ee95d42] under array_positions; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionsFunction@501b296a] under array_positions_list; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4202276] under array_length; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatFunction@458704ee] under array_concat; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatElementFunction@1db5de29] under array_prepend; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatElementFunction@64d1f549] under array_append; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayContainsFunction@64c37088] under array_contains; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayContainsFunction@524c3e54] under array_contains_nullable; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayOverlapsFunction@11fb1691] under array_overlaps; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayOverlapsFunction@1f229c40] under array_overlaps_nullable; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@41dc34c8] under array_get; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArraySetFunction@12051d38] under array_set; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayRemoveFunction@1693d505] under array_remove; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayRemoveIndexFunction@2f8b48c3] under array_remove_index; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2af31aba] under array_slice; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayReplaceFunction@68fc1e7f] under array_replace; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@99af41d] under array_trim; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayFillFunction@705eb026] under array_fill; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayFillFunction@8de4206] under array_fill_list; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayToStringFunction@7369208e] under array_to_string; prior registration was null
2024-07-10 21:28:48 - abs(NUMERIC arg)
2024-07-10 21:28:48 - Double acos(NUMERIC arg)
2024-07-10 21:28:48 - Boolean any(BOOLEAN predicate)
2024-07-10 21:28:48 - array( ... )
2024-07-10 21:28:48 - array_agg(arg)
2024-07-10 21:28:48 - array_append( ... )
2024-07-10 21:28:48 - array_concat( ... )
2024-07-10 21:28:48 - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-07-10 21:28:48 - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-07-10 21:28:48 - array_fill(OBJECT element, INTEGER elementCount)
2024-07-10 21:28:48 - array_fill_list(OBJECT element, INTEGER elementCount)
2024-07-10 21:28:48 - array_get(ARRAY array, INTEGER index)
2024-07-10 21:28:48 - Integer array_length(ARRAY array)
2024-07-10 21:28:48 - array_list( ... )
2024-07-10 21:28:48 - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-07-10 21:28:48 - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-07-10 21:28:48 - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-07-10 21:28:48 - int[] array_positions(ARRAY array, OBJECT element)
2024-07-10 21:28:48 - List array_positions_list(ARRAY array, OBJECT element)
2024-07-10 21:28:48 - array_prepend( ... )
2024-07-10 21:28:48 - array_remove( ... )
2024-07-10 21:28:48 - array_remove_index( ... )
2024-07-10 21:28:48 - array_replace( ... )
2024-07-10 21:28:48 - array_set( ... )
2024-07-10 21:28:48 - array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-07-10 21:28:48 - String array_to_string( ... )
2024-07-10 21:28:48 - array_trim(ARRAY array, INTEGER elementsToRemove)
2024-07-10 21:28:48 - Integer ascii(STRING arg)
2024-07-10 21:28:48 - Double asin(NUMERIC arg)
2024-07-10 21:28:48 - Double atan(NUMERIC arg)
2024-07-10 21:28:48 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-10 21:28:48 - avg(NUMERIC arg)
2024-07-10 21:28:48 - bit_and(arg)
2024-07-10 21:28:48 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-10 21:28:48 - bit_or(arg)
2024-07-10 21:28:48 - bitand(arg0, arg1)
2024-07-10 21:28:48 - bitnot(arg)
2024-07-10 21:28:48 - bitor(arg0, arg1)
2024-07-10 21:28:48 - bitxor(arg0, arg1)
2024-07-10 21:28:48 - Boolean bool_and(BOOLEAN predicate)
2024-07-10 21:28:48 - Boolean bool_or(BOOLEAN predicate)
2024-07-10 21:28:48 - cast(arg as Type)
2024-07-10 21:28:48 - ceiling(NUMERIC arg)
2024-07-10 21:28:48 - Character char(INTEGER arg)
2024-07-10 21:28:48 - Integer character_length(STRING_OR_CLOB arg)
2024-07-10 21:28:48 - Character chr(INTEGER arg)
2024-07-10 21:28:48 - coalesce(arg0[, arg1[, ...]])
2024-07-10 21:28:48 - String collate(STRING string as COLLATION collation)
2024-07-10 21:28:48 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-10 21:28:48 - Double cos(NUMERIC arg)
2024-07-10 21:28:48 - Double cosh(NUMERIC arg)
2024-07-10 21:28:48 - Double cot(NUMERIC arg)
2024-07-10 21:28:48 - Long count([distinct ]{arg|*})
2024-07-10 21:28:48 - Double cume_dist([arg0[, ...]])
2024-07-10 21:28:48 - Date curdate()
2024-07-10 21:28:48 - Date current date
2024-07-10 21:28:48 - Time current time
2024-07-10 21:28:48 - Timestamp current timestamp
2024-07-10 21:28:48 - Date current_date
2024-07-10 21:28:48 - Instant current_instant
2024-07-10 21:28:48 - Time current_time
2024-07-10 21:28:48 - Timestamp current_timestamp
2024-07-10 21:28:48 - Time curtime()
2024-07-10 21:28:48 - date_trunc(STRING field, TEMPORAL datetime)
2024-07-10 21:28:48 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-10 21:28:48 - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-10 21:28:48 - Integer day(DATE arg)
2024-07-10 21:28:48 - Integer day_of_month(DATE arg)
2024-07-10 21:28:48 - Integer day_of_week(DATE arg)
2024-07-10 21:28:48 - Integer day_of_year(DATE arg)
2024-07-10 21:28:48 - String dayname(DATE arg)
2024-07-10 21:28:48 - Double degrees(NUMERIC arg)
2024-07-10 21:28:48 - Long dense_rank([arg0[, ...]])
2024-07-10 21:28:48 - Boolean every(BOOLEAN predicate)
2024-07-10 21:28:48 - Double exp(NUMERIC arg)
2024-07-10 21:28:48 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-10 21:28:48 - first_valueANY value
2024-07-10 21:28:48 - floor(NUMERIC arg)
2024-07-10 21:28:48 - String format(TEMPORAL datetime as STRING pattern)
2024-07-10 21:28:48 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-10 21:28:48 - Integer hour(TIME arg)
2024-07-10 21:28:48 - ifnull(arg0, arg1)
2024-07-10 21:28:48 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-10 21:28:48 - Instant instant
2024-07-10 21:28:48 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-10 21:28:48 - lagANY value[, INTEGER offset[, ANY default]]
2024-07-10 21:28:48 - last_valueANY value
2024-07-10 21:28:48 - leadANY value[, INTEGER offset[, ANY default]]
2024-07-10 21:28:48 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-10 21:28:48 - String left(STRING string, INTEGER length)
2024-07-10 21:28:48 - Integer length(STRING_OR_CLOB arg)
2024-07-10 21:28:48 - String listagg(STRING arg0, STRING arg1)
2024-07-10 21:28:48 - Double ln(NUMERIC arg)
2024-07-10 21:28:48 - LocalDate local date
2024-07-10 21:28:48 - LocalDateTime local datetime
2024-07-10 21:28:48 - LocalTime local time
2024-07-10 21:28:48 - LocalDate local_date
2024-07-10 21:28:48 - LocalDateTime local_datetime
2024-07-10 21:28:48 - LocalTime local_time
2024-07-10 21:28:48 - Time localtime
2024-07-10 21:28:48 - Timestamp localtimestamp
2024-07-10 21:28:48 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-10 21:28:48 - Double log(NUMERIC base, NUMERIC arg)
2024-07-10 21:28:48 - Double log10(NUMERIC arg)
2024-07-10 21:28:48 - String lower(STRING string)
2024-07-10 21:28:48 - String lpad(STRING string, INTEGER length[, STRING padding])
2024-07-10 21:28:48 - String ltrim(STRING string)
2024-07-10 21:28:48 - max(COMPARABLE arg)
2024-07-10 21:28:48 - Double median(NUMERIC arg)
2024-07-10 21:28:48 - Integer microsecond(TIME arg)
2024-07-10 21:28:48 - min(COMPARABLE arg)
2024-07-10 21:28:48 - Integer minute(TIME arg)
2024-07-10 21:28:48 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-10 21:28:48 - mode()
2024-07-10 21:28:48 - Integer month(DATE arg)
2024-07-10 21:28:48 - String monthname(DATE arg)
2024-07-10 21:28:48 - Timestamp now()
2024-07-10 21:28:48 - nth_valueANY value, INTEGER nth
2024-07-10 21:28:48 - nullif(arg0, arg1)
2024-07-10 21:28:48 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-10 21:28:48 - OffsetDateTime offset datetime
2024-07-10 21:28:48 - OffsetDateTime offset_datetime
2024-07-10 21:28:48 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-10 21:28:48 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-10 21:28:48 - Double percent_rank([arg0[, ...]])
2024-07-10 21:28:48 - percentile_cont(NUMERIC arg)
2024-07-10 21:28:48 - percentile_disc(NUMERIC arg)
2024-07-10 21:28:48 - Double pi
2024-07-10 21:28:48 - Integer position(STRING pattern in STRING string)
2024-07-10 21:28:48 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-10 21:28:48 - Integer quarter(DATE arg)
2024-07-10 21:28:48 - Double radians(NUMERIC arg)
2024-07-10 21:28:48 - Double rand([INTEGER seed])
2024-07-10 21:28:48 - Long rank([arg0[, ...]])
2024-07-10 21:28:48 - String repeat(STRING string, INTEGER times)
2024-07-10 21:28:48 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-10 21:28:48 - String right(STRING string, INTEGER length)
2024-07-10 21:28:48 - round(NUMERIC number[, INTEGER places])
2024-07-10 21:28:48 - Long row_number()
2024-07-10 21:28:48 - Long rownum()
2024-07-10 21:28:48 - String rpad(STRING string, INTEGER length[, STRING padding])
2024-07-10 21:28:48 - String rtrim(STRING string)
2024-07-10 21:28:48 - Integer second(TIME arg)
2024-07-10 21:28:48 - Integer sign(NUMERIC arg)
2024-07-10 21:28:48 - Double sin(NUMERIC arg)
2024-07-10 21:28:48 - Double sinh(NUMERIC arg)
2024-07-10 21:28:48 - String soundex(arg)
2024-07-10 21:28:48 - String space(INTEGER arg)
2024-07-10 21:28:48 - Object sql
2024-07-10 21:28:48 - Double sqrt(NUMERIC arg)
2024-07-10 21:28:48 - Double stddev_pop(NUMERIC arg)
2024-07-10 21:28:48 - Double stddev_samp(NUMERIC arg)
2024-07-10 21:28:48 - String str(arg)
2024-07-10 21:28:48 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-10 21:28:48 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-10 21:28:48 - sum(arg)
2024-07-10 21:28:48 - Timestamp sysdate
2024-07-10 21:28:48 - Double tan(NUMERIC arg)
2024-07-10 21:28:48 - Double tanh(NUMERIC arg)
2024-07-10 21:28:48 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-10 21:28:48 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-10 21:28:48 - String translate(STRING arg0, STRING arg1, STRING arg2)
2024-07-10 21:28:48 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-10 21:28:48 - trunc( ... )
2024-07-10 21:28:48 - truncate( ... )
2024-07-10 21:28:48 - String upper(STRING string)
2024-07-10 21:28:48 - Double var_pop(NUMERIC arg)
2024-07-10 21:28:48 - Double var_samp(NUMERIC arg)
2024-07-10 21:28:48 - Integer week(DATE arg)
2024-07-10 21:28:48 - Integer year(DATE arg)
2024-07-10 21:28:48 - Starting QueryInterpretationCache(2048)
2024-07-10 21:28:48 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-10 21:28:48 - Configured EntityCopyObserver strategy: disallow
2024-07-10 21:28:48 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-10 21:28:48 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-10 21:28:48 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-10 21:28:48 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-10 21:28:48 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-10 21:28:48 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-10 21:28:48 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-10 21:28:48 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-10 21:28:48 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-10 21:28:48 - Starting post-init callbacks
2024-07-10 21:28:48 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-10 21:28:48 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-10 21:28:48 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-10 21:28:48 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-10 21:28:48 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-10 21:28:48 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-10 21:28:48 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-10 21:28:48 - Created new SQL alias : u1_0
2024-07-10 21:28:48 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-10 21:28:48 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-10 21:28:48 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-10 21:28:48 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-10 21:28:48 -  Version select: select id from users where id=?
2024-07-10 21:28:48 -  Insert (0): insert into users (email,password,username,id) values (?,?,?,default)
2024-07-10 21:28:48 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-10 21:28:48 -  Delete (0): delete from users where id=?
2024-07-10 21:28:48 - Created new SQL alias : t1_0
2024-07-10 21:28:48 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-10 21:28:48 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1b18fa79] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-10 21:28:48 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-10 21:28:48 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-10 21:28:48 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-10 21:28:48 -  Version select: select id from task where id=?
2024-07-10 21:28:48 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id,id) values (?,?,?,?,?,?,?,default)
2024-07-10 21:28:48 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-10 21:28:48 -  Delete (0): delete from task where id=?
2024-07-10 21:28:48 - Created new SQL alias : t1_0
2024-07-10 21:28:48 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@7a79a5d6] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-10 21:28:48 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-10 21:28:48 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3ed3e66d] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-10 21:28:48 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-10 21:28:48 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-10 21:28:48 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-10 21:28:48 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 21:28:48 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@744f0e0b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@72924f19]
2024-07-10 21:28:48 - Checking 0 named HQL queries
2024-07-10 21:28:48 - Checking 0 named SQL queries
2024-07-10 21:28:48 - drop table if exists task cascade 
2024-07-10 21:28:48 - drop table if exists users cascade 
2024-07-10 21:28:48 - create table task (created_at timestamp(6), id bigint generated by default as identity, updated_at timestamp(6), user_id bigint, category varchar(255), description varchar(255), priority varchar(255), title varchar(255), primary key (id))
2024-07-10 21:28:48 - create table users (id bigint generated by default as identity, email varchar(255), password varchar(255), username varchar(255), primary key (id))
2024-07-10 21:28:48 - alter table if exists task add constraint FKbhwpp8tr117vvbxhf5sbkdkc9 foreign key (user_id) references users
2024-07-10 21:28:48 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2b27d5d3
2024-07-10 21:28:48 - Registering SessionFactory: 08f6f676-7a68-4296-abc0-6e52fbf53c15 (<unnamed>)
2024-07-10 21:28:48 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-10 21:28:48 - Instantiated SessionFactory
2024-07-10 21:28:48 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 21:28:48 - Statistics initialized [enabled=false]
2024-07-10 21:28:48 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:28:49 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:28:49 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:28:49 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:28:49 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 21:28:49 - 

Using generated security password: 381a03f9-a3b8-4c13-b0d0-9cd7e0ac2ca8

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-10 21:28:49 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-10 21:28:49 - 11 mappings in 'requestMappingHandlerMapping'
2024-07-10 21:28:49 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-10 21:28:49 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-10 21:29:25 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-10 21:29:25 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-10 21:29:25 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-10 21:29:25 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-10 21:29:25 - Tomcat started on port 8080 (http) with context path '/'
2024-07-10 21:29:25 - Started TaskmanagementApplication in 42.083 seconds (process running for 42.789)
2024-07-10 21:31:01 - Starting TaskmanagementApplication using Java 22.0.1 with PID 32860 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-10 21:31:01 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 21:31:02 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 21:31:02 - Finished Spring Data repository scanning in 45 ms. Found 2 JPA repository interfaces.
2024-07-10 21:31:03 - Tomcat initialized with port 8080 (http)
2024-07-10 21:31:03 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-10 21:31:03 - Starting service [Tomcat]
2024-07-10 21:31:03 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 21:31:03 - Initializing Spring embedded WebApplicationContext
2024-07-10 21:31:03 - Root WebApplicationContext: initialization completed in 2011 ms
2024-07-10 21:31:03 - Filter 'webMvcObservationFilter' configured for use
2024-07-10 21:31:04 - HikariPool-1 - Starting...
2024-07-10 21:31:04 - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:362b1504-d583-49a3-b370-d91a8480d45b user=SA
2024-07-10 21:31:04 - HikariPool-1 - Start completed.
2024-07-10 21:31:04 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/Assignment%201%20Spring%20Boot/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-10 21:31:04 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-10 21:31:04 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-10 21:31:04 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 21:31:04 - HHH000206: 'hibernate.properties' not found
2024-07-10 21:31:04 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-10 21:31:04 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-10 21:31:04 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-10 21:31:04 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-10 21:31:04 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-10 21:31:04 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-10 21:31:04 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-10 21:31:04 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-10 21:31:04 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-10 21:31:04 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-10 21:31:04 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-10 21:31:04 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-10 21:31:04 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-10 21:31:04 - HHH000026: Second-level cache disabled
2024-07-10 21:31:04 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@53079ae6
2024-07-10 21:31:04 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@53079ae6
2024-07-10 21:31:04 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@53079ae6
2024-07-10 21:31:04 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@718ad3a6
2024-07-10 21:31:04 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@718ad3a6
2024-07-10 21:31:04 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@603c2dee
2024-07-10 21:31:04 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@603c2dee
2024-07-10 21:31:04 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@50d666a2
2024-07-10 21:31:04 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@50d666a2
2024-07-10 21:31:04 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3f6906f4
2024-07-10 21:31:04 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3f6906f4
2024-07-10 21:31:04 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3f6906f4
2024-07-10 21:31:04 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1859e55c
2024-07-10 21:31:04 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1859e55c
2024-07-10 21:31:04 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1859e55c
2024-07-10 21:31:04 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@190bf8e4
2024-07-10 21:31:04 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@190bf8e4
2024-07-10 21:31:04 - Adding type registration image -> org.hibernate.type.BasicTypeReference@7a8b7e11
2024-07-10 21:31:04 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@d229912
2024-07-10 21:31:04 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@d229912
2024-07-10 21:31:04 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5a06eeef
2024-07-10 21:31:04 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1c0cf193
2024-07-10 21:31:04 - Adding type registration short -> org.hibernate.type.BasicTypeReference@3dd66ff5
2024-07-10 21:31:04 - Adding type registration short -> org.hibernate.type.BasicTypeReference@3dd66ff5
2024-07-10 21:31:04 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3dd66ff5
2024-07-10 21:31:04 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@24258b54
2024-07-10 21:31:04 - Adding type registration int -> org.hibernate.type.BasicTypeReference@24258b54
2024-07-10 21:31:04 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@24258b54
2024-07-10 21:31:04 - Adding type registration long -> org.hibernate.type.BasicTypeReference@493968a9
2024-07-10 21:31:04 - Adding type registration long -> org.hibernate.type.BasicTypeReference@493968a9
2024-07-10 21:31:04 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@493968a9
2024-07-10 21:31:04 - Adding type registration float -> org.hibernate.type.BasicTypeReference@32428874
2024-07-10 21:31:04 - Adding type registration float -> org.hibernate.type.BasicTypeReference@32428874
2024-07-10 21:31:04 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@32428874
2024-07-10 21:31:04 - Adding type registration double -> org.hibernate.type.BasicTypeReference@3c65f00e
2024-07-10 21:31:04 - Adding type registration double -> org.hibernate.type.BasicTypeReference@3c65f00e
2024-07-10 21:31:04 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3c65f00e
2024-07-10 21:31:04 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3412a3fd
2024-07-10 21:31:04 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3412a3fd
2024-07-10 21:31:04 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@36ecf9f6
2024-07-10 21:31:04 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@36ecf9f6
2024-07-10 21:31:04 - Adding type registration character -> org.hibernate.type.BasicTypeReference@104bc677
2024-07-10 21:31:04 - Adding type registration char -> org.hibernate.type.BasicTypeReference@104bc677
2024-07-10 21:31:04 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@104bc677
2024-07-10 21:31:04 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3bda1f0
2024-07-10 21:31:04 - Adding type registration string -> org.hibernate.type.BasicTypeReference@2211e731
2024-07-10 21:31:04 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2211e731
2024-07-10 21:31:04 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@73e399cc
2024-07-10 21:31:04 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3dd591b9
2024-07-10 21:31:04 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3dd591b9
2024-07-10 21:31:04 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3dd591b9
2024-07-10 21:31:04 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@538905d2
2024-07-10 21:31:04 - Adding type registration text -> org.hibernate.type.BasicTypeReference@7e8c58fd
2024-07-10 21:31:04 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@11ce9319
2024-07-10 21:31:04 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@780c0
2024-07-10 21:31:04 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@780c0
2024-07-10 21:31:04 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b3bb287
2024-07-10 21:31:04 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b3bb287
2024-07-10 21:31:04 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7ec5aad
2024-07-10 21:31:04 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@625f5712
2024-07-10 21:31:04 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5e62ca19
2024-07-10 21:31:04 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@188bf4d8
2024-07-10 21:31:04 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7dd7ec56
2024-07-10 21:31:04 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6528d339
2024-07-10 21:31:04 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2dd2ff87
2024-07-10 21:31:04 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2dd2ff87
2024-07-10 21:31:04 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6a38e3d1
2024-07-10 21:31:04 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6a38e3d1
2024-07-10 21:31:04 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@28cf179c
2024-07-10 21:31:04 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@28cf179c
2024-07-10 21:31:04 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@bdda8a7
2024-07-10 21:31:04 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@bdda8a7
2024-07-10 21:31:04 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3149409c
2024-07-10 21:31:04 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3149409c
2024-07-10 21:31:04 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1c421b0f
2024-07-10 21:31:04 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4ce18cec
2024-07-10 21:31:04 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2a9f8d47
2024-07-10 21:31:04 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2a9f8d47
2024-07-10 21:31:04 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@51297528
2024-07-10 21:31:04 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5d3f8661
2024-07-10 21:31:04 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1df9f7c6
2024-07-10 21:31:04 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4b5aa48b
2024-07-10 21:31:04 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4b5aa48b
2024-07-10 21:31:04 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@51c008fd
2024-07-10 21:31:04 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70ed902a
2024-07-10 21:31:04 - Adding type registration date -> org.hibernate.type.BasicTypeReference@22f80e36
2024-07-10 21:31:04 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@22f80e36
2024-07-10 21:31:04 - Adding type registration time -> org.hibernate.type.BasicTypeReference@3c98981e
2024-07-10 21:31:04 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3c98981e
2024-07-10 21:31:04 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6dcee890
2024-07-10 21:31:04 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6dcee890
2024-07-10 21:31:04 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6dcee890
2024-07-10 21:31:04 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@713e49c3
2024-07-10 21:31:04 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@713e49c3
2024-07-10 21:31:04 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@713e49c3
2024-07-10 21:31:04 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@13d5606c
2024-07-10 21:31:04 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6bf54260
2024-07-10 21:31:04 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7165bde6
2024-07-10 21:31:04 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7165bde6
2024-07-10 21:31:04 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@72168258
2024-07-10 21:31:04 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@72168258
2024-07-10 21:31:04 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@72168258
2024-07-10 21:31:04 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4af84a76
2024-07-10 21:31:04 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@b5ff70b
2024-07-10 21:31:04 - Adding type registration class -> org.hibernate.type.BasicTypeReference@5709e10b
2024-07-10 21:31:04 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5709e10b
2024-07-10 21:31:04 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@114badf0
2024-07-10 21:31:04 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@114badf0
2024-07-10 21:31:04 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@114badf0
2024-07-10 21:31:04 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6d7bb5cc
2024-07-10 21:31:04 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6d7bb5cc
2024-07-10 21:31:04 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@756200d1
2024-07-10 21:31:04 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@756200d1
2024-07-10 21:31:04 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@390a07a0
2024-07-10 21:31:04 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@390a07a0
2024-07-10 21:31:04 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@674e4c82
2024-07-10 21:31:04 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@674e4c82
2024-07-10 21:31:04 - Adding type registration url -> org.hibernate.type.BasicTypeReference@572b4072
2024-07-10 21:31:04 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@572b4072
2024-07-10 21:31:04 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@322ab6ce
2024-07-10 21:31:04 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5b74902c
2024-07-10 21:31:04 - Adding type registration object -> org.hibernate.type.JavaObjectType@c1f0c7b
2024-07-10 21:31:04 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@c1f0c7b
2024-07-10 21:31:04 - Adding type registration null -> org.hibernate.type.NullType@4a47bc9c
2024-07-10 21:31:04 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5100c143
2024-07-10 21:31:04 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@12404f9d
2024-07-10 21:31:04 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3b42b729
2024-07-10 21:31:04 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4c164f81
2024-07-10 21:31:04 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1bcb8599
2024-07-10 21:31:04 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@b671dda
2024-07-10 21:31:04 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@25b20860
2024-07-10 21:31:04 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5ba63110
2024-07-10 21:31:04 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@29592929] into BootstrapContext; was [null]
2024-07-10 21:31:04 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@29592929) [was null]
2024-07-10 21:31:04 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5c0272e0] into BootstrapContext; was [null]
2024-07-10 21:31:04 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@60c4cf2b] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@774304ca]
2024-07-10 21:31:04 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 21:31:04 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@29592929]
2024-07-10 21:31:04 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@29592929]
2024-07-10 21:31:04 - Database ->
	   name : H2
	version : 2.2.224 (2023-09-17)
	  major : 2
	  minor : 2
2024-07-10 21:31:04 - Driver ->
	   name : H2 JDBC Driver
	version : 2.2.224 (2023-09-17)
	  major : 2
	  minor : 2
2024-07-10 21:31:04 - JDBC version : 4.2
2024-07-10 21:31:04 - HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 2.2.224
2024-07-10 21:31:04 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-07-10 21:31:04 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-10 21:31:04 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-10 21:31:04 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-10 21:31:04 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 21:31:04 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 21:31:04 - addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2024-07-10 21:31:04 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-10 21:31:04 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-10 21:31:04 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-10 21:31:04 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5020e5ab] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@19f1f330]
2024-07-10 21:31:05 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-10 21:31:05 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-10 21:31:05 - Import with entity name Task
2024-07-10 21:31:05 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-10 21:31:05 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-10 21:31:05 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-10 21:31:05 - MetadataSourceProcessor property id with lazy=false
2024-07-10 21:31:05 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-10 21:31:05 - building BasicValue for id
2024-07-10 21:31:05 - Skipping column re-registration: task.id
2024-07-10 21:31:05 - Building property id
2024-07-10 21:31:05 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - MetadataSourceProcessor property category with lazy=false
2024-07-10 21:31:05 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-10 21:31:05 - building BasicValue for category
2024-07-10 21:31:05 - Skipping column re-registration: task.category
2024-07-10 21:31:05 - Building property category
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-10 21:31:05 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-10 21:31:05 - building BasicValue for createdAt
2024-07-10 21:31:05 - Skipping column re-registration: task.created_at
2024-07-10 21:31:05 - Building property createdAt
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - MetadataSourceProcessor property description with lazy=false
2024-07-10 21:31:05 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-10 21:31:05 - building BasicValue for description
2024-07-10 21:31:05 - Skipping column re-registration: task.description
2024-07-10 21:31:05 - Building property description
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - MetadataSourceProcessor property priority with lazy=false
2024-07-10 21:31:05 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-10 21:31:05 - building BasicValue for priority
2024-07-10 21:31:05 - Skipping column re-registration: task.priority
2024-07-10 21:31:05 - Building property priority
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - MetadataSourceProcessor property title with lazy=false
2024-07-10 21:31:05 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-10 21:31:05 - building BasicValue for title
2024-07-10 21:31:05 - Skipping column re-registration: task.title
2024-07-10 21:31:05 - Building property title
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-10 21:31:05 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-10 21:31:05 - building BasicValue for updatedAt
2024-07-10 21:31:05 - Skipping column re-registration: task.updated_at
2024-07-10 21:31:05 - Building property updatedAt
2024-07-10 21:31:05 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - Building property user
2024-07-10 21:31:05 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-10 21:31:05 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-10 21:31:05 - Import with entity name User
2024-07-10 21:31:05 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-10 21:31:05 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-10 21:31:05 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-10 21:31:05 - MetadataSourceProcessor property id with lazy=false
2024-07-10 21:31:05 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-10 21:31:05 - building BasicValue for id
2024-07-10 21:31:05 - Skipping column re-registration: users.id
2024-07-10 21:31:05 - Building property id
2024-07-10 21:31:05 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - MetadataSourceProcessor property email with lazy=false
2024-07-10 21:31:05 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-10 21:31:05 - building BasicValue for email
2024-07-10 21:31:05 - Skipping column re-registration: users.email
2024-07-10 21:31:05 - Building property email
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - MetadataSourceProcessor property password with lazy=false
2024-07-10 21:31:05 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-10 21:31:05 - building BasicValue for password
2024-07-10 21:31:05 - Skipping column re-registration: users.password
2024-07-10 21:31:05 - Building property password
2024-07-10 21:31:05 - Binding column: AnnotatedJoinColumn()
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-10 21:31:05 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-10 21:31:05 - Binding column: AnnotatedJoinColumn()
2024-07-10 21:31:05 - Binding column: AnnotatedJoinColumn()
2024-07-10 21:31:05 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-10 21:31:05 - Building property tasks
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - MetadataSourceProcessor property username with lazy=false
2024-07-10 21:31:05 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-10 21:31:05 - building BasicValue for username
2024-07-10 21:31:05 - Skipping column re-registration: users.username
2024-07-10 21:31:05 - Building property username
2024-07-10 21:31:05 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-10 21:31:05 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-10 21:31:05 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-10 21:31:05 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-10 21:31:05 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-10 21:31:05 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-10 21:31:05 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-10 21:31:05 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-10 21:31:05 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-10 21:31:05 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-10 21:31:05 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-10 21:31:05 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-10 21:31:05 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-10 21:31:05 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-10 21:31:05 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-10 21:31:05 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-10 21:31:05 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-10 21:31:05 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-10 21:31:05 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-10 21:31:05 - Building session factory
2024-07-10 21:31:05 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-10 21:31:05 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3b764e66, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@38834000, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.2366710440656459448, com.sun.management.jmxremote.port=60666, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=32860, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.2366710440656459448, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5b72b13a, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-10 21:31:05 - Session factory constructed with filter configurations : {}
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@f26cd76] under count; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@9a16af1] under every; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@47e70f54] under any; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@25c06894] under sinh; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5c2ae7d7] under cosh; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e7cb01a] under tanh; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@236206f8] under pi; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5c04ec8] under log; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-10 21:31:05 - Registering alternate key : length -> character_length
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@143900a6] under position; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6efc9d3f] under overlay; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7bb3294c] under trim; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4fea9f19] under cast; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37a14aa1] under collate; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@362fd4e9] under extract; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@629cf53c] under ifnull; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@7983a5d5] under pad; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@14580edc] under str; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@65294247] under format; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2eafb4e7] under timestampadd; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@579ee82] under timestampdiff; prior registration was null
2024-07-10 21:31:05 - Registering alternate key : dateadd -> timestampadd
2024-07-10 21:31:05 - Registering alternate key : datediff -> timestampdiff
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2dbf8cfc] under current_date; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@26c1244c] under current_time; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@e76134d] under current_timestamp; prior registration was null
2024-07-10 21:31:05 - Registering alternate key : current date -> current_date
2024-07-10 21:31:05 - Registering alternate key : current time -> current_time
2024-07-10 21:31:05 - Registering alternate key : current timestamp -> current_timestamp
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2a317af7] under local_date; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7b38db21] under local_time; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@54f4734e] under local_datetime; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a26eee6] under offset_datetime; prior registration was null
2024-07-10 21:31:05 - Registering alternate key : local date -> local_date
2024-07-10 21:31:05 - Registering alternate key : local time -> local_time
2024-07-10 21:31:05 - Registering alternate key : local datetime -> local_datetime
2024-07-10 21:31:05 - Registering alternate key : offset datetime -> offset_datetime
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4be1c797] under instant; prior registration was null
2024-07-10 21:31:05 - Registering alternate key : current_instant -> instant
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@19b0a9f2] under sql; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@f4c3e9] under count; prior registration was org.hibernate.dialect.function.CountFunction@f26cd76
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@3976910] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@236206f8
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e149395] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitnot)] under bitnot; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2024-07-10 21:31:05 - Registering alternate key : day -> day_of_month
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7b38db21
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@54f4734e
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@57466fb7] under trunc; prior registration was null
2024-07-10 21:31:05 - Registering alternate key : truncate -> trunc
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7891742e] under date_trunc; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2024-07-10 21:31:05 - Registering alternate key : chr -> char
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2bbaf983] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@143900a6
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@781bd9dd] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-07-10 21:31:05 - Registering alternate key : every -> bool_and
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-07-10 21:31:05 - Registering alternate key : any -> bool_or
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1cc42abe] under format; prior registration was org.hibernate.dialect.function.FormatFunction@65294247
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@5feaafb3] under listagg; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@330d16af] under mode; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@16f15a4] under percentile_cont; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@548c5127] under percentile_disc; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@21084a6d] under rank; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@c3114ea] under dense_rank; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@642d971f] under percent_rank; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2afe825a] under cume_dist; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConstructorFunction@1f3dafd4] under array; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConstructorFunction@33622388] under array_list; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@3e0b1f03] under array_agg; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionFunction@6ddbbfbb] under array_position; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionsFunction@7c1c0892] under array_positions; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionsFunction@458704ee] under array_positions_list; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45b2d17b] under array_length; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatFunction@64d1f549] under array_concat; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatElementFunction@672f69f7] under array_prepend; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatElementFunction@6aaf1ce8] under array_append; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayContainsFunction@11fb1691] under array_contains; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayContainsFunction@1f229c40] under array_contains_nullable; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayOverlapsFunction@3f5e64c9] under array_overlaps; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayOverlapsFunction@1f847d9e] under array_overlaps_nullable; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12051d38] under array_get; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArraySetFunction@3d195d15] under array_set; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayRemoveFunction@2af31aba] under array_remove; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayRemoveIndexFunction@68fc1e7f] under array_remove_index; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@99af41d] under array_slice; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayReplaceFunction@33197c2f] under array_replace; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@24e79a4d] under array_trim; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayFillFunction@7369208e] under array_fill; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayFillFunction@7ba623d1] under array_fill_list; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayToStringFunction@1239c268] under array_to_string; prior registration was null
2024-07-10 21:31:05 - abs(NUMERIC arg)
2024-07-10 21:31:05 - Double acos(NUMERIC arg)
2024-07-10 21:31:05 - Boolean any(BOOLEAN predicate)
2024-07-10 21:31:05 - array( ... )
2024-07-10 21:31:05 - array_agg(arg)
2024-07-10 21:31:05 - array_append( ... )
2024-07-10 21:31:05 - array_concat( ... )
2024-07-10 21:31:05 - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-07-10 21:31:05 - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-07-10 21:31:05 - array_fill(OBJECT element, INTEGER elementCount)
2024-07-10 21:31:05 - array_fill_list(OBJECT element, INTEGER elementCount)
2024-07-10 21:31:05 - array_get(ARRAY array, INTEGER index)
2024-07-10 21:31:05 - Integer array_length(ARRAY array)
2024-07-10 21:31:05 - array_list( ... )
2024-07-10 21:31:05 - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-07-10 21:31:05 - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-07-10 21:31:05 - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-07-10 21:31:05 - int[] array_positions(ARRAY array, OBJECT element)
2024-07-10 21:31:05 - List array_positions_list(ARRAY array, OBJECT element)
2024-07-10 21:31:05 - array_prepend( ... )
2024-07-10 21:31:05 - array_remove( ... )
2024-07-10 21:31:05 - array_remove_index( ... )
2024-07-10 21:31:05 - array_replace( ... )
2024-07-10 21:31:05 - array_set( ... )
2024-07-10 21:31:05 - array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-07-10 21:31:05 - String array_to_string( ... )
2024-07-10 21:31:05 - array_trim(ARRAY array, INTEGER elementsToRemove)
2024-07-10 21:31:05 - Integer ascii(STRING arg)
2024-07-10 21:31:05 - Double asin(NUMERIC arg)
2024-07-10 21:31:05 - Double atan(NUMERIC arg)
2024-07-10 21:31:05 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-10 21:31:05 - avg(NUMERIC arg)
2024-07-10 21:31:05 - bit_and(arg)
2024-07-10 21:31:05 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-10 21:31:05 - bit_or(arg)
2024-07-10 21:31:05 - bitand(arg0, arg1)
2024-07-10 21:31:05 - bitnot(arg)
2024-07-10 21:31:05 - bitor(arg0, arg1)
2024-07-10 21:31:05 - bitxor(arg0, arg1)
2024-07-10 21:31:05 - Boolean bool_and(BOOLEAN predicate)
2024-07-10 21:31:05 - Boolean bool_or(BOOLEAN predicate)
2024-07-10 21:31:05 - cast(arg as Type)
2024-07-10 21:31:05 - ceiling(NUMERIC arg)
2024-07-10 21:31:05 - Character char(INTEGER arg)
2024-07-10 21:31:05 - Integer character_length(STRING_OR_CLOB arg)
2024-07-10 21:31:05 - Character chr(INTEGER arg)
2024-07-10 21:31:05 - coalesce(arg0[, arg1[, ...]])
2024-07-10 21:31:05 - String collate(STRING string as COLLATION collation)
2024-07-10 21:31:05 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-10 21:31:05 - Double cos(NUMERIC arg)
2024-07-10 21:31:05 - Double cosh(NUMERIC arg)
2024-07-10 21:31:05 - Double cot(NUMERIC arg)
2024-07-10 21:31:05 - Long count([distinct ]{arg|*})
2024-07-10 21:31:05 - Double cume_dist([arg0[, ...]])
2024-07-10 21:31:05 - Date curdate()
2024-07-10 21:31:05 - Date current date
2024-07-10 21:31:05 - Time current time
2024-07-10 21:31:05 - Timestamp current timestamp
2024-07-10 21:31:05 - Date current_date
2024-07-10 21:31:05 - Instant current_instant
2024-07-10 21:31:05 - Time current_time
2024-07-10 21:31:05 - Timestamp current_timestamp
2024-07-10 21:31:05 - Time curtime()
2024-07-10 21:31:05 - date_trunc(STRING field, TEMPORAL datetime)
2024-07-10 21:31:05 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-10 21:31:05 - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-10 21:31:05 - Integer day(DATE arg)
2024-07-10 21:31:05 - Integer day_of_month(DATE arg)
2024-07-10 21:31:05 - Integer day_of_week(DATE arg)
2024-07-10 21:31:05 - Integer day_of_year(DATE arg)
2024-07-10 21:31:05 - String dayname(DATE arg)
2024-07-10 21:31:05 - Double degrees(NUMERIC arg)
2024-07-10 21:31:05 - Long dense_rank([arg0[, ...]])
2024-07-10 21:31:05 - Boolean every(BOOLEAN predicate)
2024-07-10 21:31:05 - Double exp(NUMERIC arg)
2024-07-10 21:31:05 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-10 21:31:05 - first_valueANY value
2024-07-10 21:31:05 - floor(NUMERIC arg)
2024-07-10 21:31:05 - String format(TEMPORAL datetime as STRING pattern)
2024-07-10 21:31:05 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-10 21:31:05 - Integer hour(TIME arg)
2024-07-10 21:31:05 - ifnull(arg0, arg1)
2024-07-10 21:31:05 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-10 21:31:05 - Instant instant
2024-07-10 21:31:05 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-10 21:31:05 - lagANY value[, INTEGER offset[, ANY default]]
2024-07-10 21:31:05 - last_valueANY value
2024-07-10 21:31:05 - leadANY value[, INTEGER offset[, ANY default]]
2024-07-10 21:31:05 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-10 21:31:05 - String left(STRING string, INTEGER length)
2024-07-10 21:31:05 - Integer length(STRING_OR_CLOB arg)
2024-07-10 21:31:05 - String listagg(STRING arg0, STRING arg1)
2024-07-10 21:31:05 - Double ln(NUMERIC arg)
2024-07-10 21:31:05 - LocalDate local date
2024-07-10 21:31:05 - LocalDateTime local datetime
2024-07-10 21:31:05 - LocalTime local time
2024-07-10 21:31:05 - LocalDate local_date
2024-07-10 21:31:05 - LocalDateTime local_datetime
2024-07-10 21:31:05 - LocalTime local_time
2024-07-10 21:31:05 - Time localtime
2024-07-10 21:31:05 - Timestamp localtimestamp
2024-07-10 21:31:05 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-10 21:31:05 - Double log(NUMERIC base, NUMERIC arg)
2024-07-10 21:31:05 - Double log10(NUMERIC arg)
2024-07-10 21:31:05 - String lower(STRING string)
2024-07-10 21:31:05 - String lpad(STRING string, INTEGER length[, STRING padding])
2024-07-10 21:31:05 - String ltrim(STRING string)
2024-07-10 21:31:05 - max(COMPARABLE arg)
2024-07-10 21:31:05 - Double median(NUMERIC arg)
2024-07-10 21:31:05 - Integer microsecond(TIME arg)
2024-07-10 21:31:05 - min(COMPARABLE arg)
2024-07-10 21:31:05 - Integer minute(TIME arg)
2024-07-10 21:31:05 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-10 21:31:05 - mode()
2024-07-10 21:31:05 - Integer month(DATE arg)
2024-07-10 21:31:05 - String monthname(DATE arg)
2024-07-10 21:31:05 - Timestamp now()
2024-07-10 21:31:05 - nth_valueANY value, INTEGER nth
2024-07-10 21:31:05 - nullif(arg0, arg1)
2024-07-10 21:31:05 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-10 21:31:05 - OffsetDateTime offset datetime
2024-07-10 21:31:05 - OffsetDateTime offset_datetime
2024-07-10 21:31:05 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-10 21:31:05 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-10 21:31:05 - Double percent_rank([arg0[, ...]])
2024-07-10 21:31:05 - percentile_cont(NUMERIC arg)
2024-07-10 21:31:05 - percentile_disc(NUMERIC arg)
2024-07-10 21:31:05 - Double pi
2024-07-10 21:31:05 - Integer position(STRING pattern in STRING string)
2024-07-10 21:31:05 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-10 21:31:05 - Integer quarter(DATE arg)
2024-07-10 21:31:05 - Double radians(NUMERIC arg)
2024-07-10 21:31:05 - Double rand([INTEGER seed])
2024-07-10 21:31:05 - Long rank([arg0[, ...]])
2024-07-10 21:31:05 - String repeat(STRING string, INTEGER times)
2024-07-10 21:31:05 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-10 21:31:05 - String right(STRING string, INTEGER length)
2024-07-10 21:31:05 - round(NUMERIC number[, INTEGER places])
2024-07-10 21:31:05 - Long row_number()
2024-07-10 21:31:05 - Long rownum()
2024-07-10 21:31:05 - String rpad(STRING string, INTEGER length[, STRING padding])
2024-07-10 21:31:05 - String rtrim(STRING string)
2024-07-10 21:31:05 - Integer second(TIME arg)
2024-07-10 21:31:05 - Integer sign(NUMERIC arg)
2024-07-10 21:31:05 - Double sin(NUMERIC arg)
2024-07-10 21:31:05 - Double sinh(NUMERIC arg)
2024-07-10 21:31:05 - String soundex(arg)
2024-07-10 21:31:05 - String space(INTEGER arg)
2024-07-10 21:31:05 - Object sql
2024-07-10 21:31:05 - Double sqrt(NUMERIC arg)
2024-07-10 21:31:05 - Double stddev_pop(NUMERIC arg)
2024-07-10 21:31:05 - Double stddev_samp(NUMERIC arg)
2024-07-10 21:31:05 - String str(arg)
2024-07-10 21:31:05 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-10 21:31:05 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-10 21:31:05 - sum(arg)
2024-07-10 21:31:05 - Timestamp sysdate
2024-07-10 21:31:05 - Double tan(NUMERIC arg)
2024-07-10 21:31:05 - Double tanh(NUMERIC arg)
2024-07-10 21:31:05 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-10 21:31:05 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-10 21:31:05 - String translate(STRING arg0, STRING arg1, STRING arg2)
2024-07-10 21:31:05 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-10 21:31:05 - trunc( ... )
2024-07-10 21:31:05 - truncate( ... )
2024-07-10 21:31:05 - String upper(STRING string)
2024-07-10 21:31:05 - Double var_pop(NUMERIC arg)
2024-07-10 21:31:05 - Double var_samp(NUMERIC arg)
2024-07-10 21:31:05 - Integer week(DATE arg)
2024-07-10 21:31:05 - Integer year(DATE arg)
2024-07-10 21:31:05 - Starting QueryInterpretationCache(2048)
2024-07-10 21:31:05 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-10 21:31:05 - Configured EntityCopyObserver strategy: disallow
2024-07-10 21:31:05 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-10 21:31:05 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-10 21:31:05 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-10 21:31:05 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-10 21:31:05 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-10 21:31:05 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-10 21:31:05 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-10 21:31:05 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-10 21:31:05 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-10 21:31:05 - Starting post-init callbacks
2024-07-10 21:31:05 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-10 21:31:05 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-10 21:31:05 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-10 21:31:05 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-10 21:31:05 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-10 21:31:05 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-10 21:31:05 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-10 21:31:05 - Created new SQL alias : u1_0
2024-07-10 21:31:05 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-10 21:31:05 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-10 21:31:05 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-10 21:31:05 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-10 21:31:05 -  Version select: select id from users where id=?
2024-07-10 21:31:05 -  Insert (0): insert into users (email,password,username,id) values (?,?,?,default)
2024-07-10 21:31:05 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-10 21:31:05 -  Delete (0): delete from users where id=?
2024-07-10 21:31:05 - Created new SQL alias : t1_0
2024-07-10 21:31:05 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-10 21:31:05 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@13e6ab86] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-10 21:31:05 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-10 21:31:05 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-10 21:31:05 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-10 21:31:05 -  Version select: select id from task where id=?
2024-07-10 21:31:05 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id,id) values (?,?,?,?,?,?,?,default)
2024-07-10 21:31:05 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-10 21:31:05 -  Delete (0): delete from task where id=?
2024-07-10 21:31:05 - Created new SQL alias : t1_0
2024-07-10 21:31:05 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@7aa62a90] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-10 21:31:05 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-10 21:31:05 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4f2a0909] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-10 21:31:05 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-10 21:31:05 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-10 21:31:05 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-10 21:31:05 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 21:31:05 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5020e5ab] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7ef34eb3]
2024-07-10 21:31:05 - Checking 0 named HQL queries
2024-07-10 21:31:05 - Checking 0 named SQL queries
2024-07-10 21:31:05 - drop table if exists task cascade 
2024-07-10 21:31:05 - drop table if exists users cascade 
2024-07-10 21:31:05 - create table task (created_at timestamp(6), id bigint generated by default as identity, updated_at timestamp(6), user_id bigint, category varchar(255), description varchar(255), priority varchar(255), title varchar(255), primary key (id))
2024-07-10 21:31:05 - create table users (id bigint generated by default as identity, email varchar(255), password varchar(255), username varchar(255), primary key (id))
2024-07-10 21:31:05 - alter table if exists task add constraint FKbhwpp8tr117vvbxhf5sbkdkc9 foreign key (user_id) references users
2024-07-10 21:31:05 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6fa5fc67
2024-07-10 21:31:05 - Registering SessionFactory: 3521fde1-ef61-4164-9f5c-555adb95a956 (<unnamed>)
2024-07-10 21:31:05 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-10 21:31:05 - Instantiated SessionFactory
2024-07-10 21:31:05 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 21:31:05 - Statistics initialized [enabled=false]
2024-07-10 21:31:06 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:31:06 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:31:06 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:31:06 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:31:06 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 21:31:06 - 

Using generated security password: ce826a0b-cca5-4c7c-ae22-add0679823d7

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-10 21:31:06 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-10 21:31:06 - 11 mappings in 'requestMappingHandlerMapping'
2024-07-10 21:31:06 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-10 21:31:07 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-10 21:33:24 - Starting TaskmanagementApplication using Java 22.0.1 with PID 30604 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-10 21:33:24 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 21:33:24 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 21:33:25 - Finished Spring Data repository scanning in 35 ms. Found 2 JPA repository interfaces.
2024-07-10 21:33:25 - Tomcat initialized with port 8080 (http)
2024-07-10 21:33:25 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-10 21:33:25 - Starting service [Tomcat]
2024-07-10 21:33:25 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 21:33:25 - Initializing Spring embedded WebApplicationContext
2024-07-10 21:33:25 - Root WebApplicationContext: initialization completed in 1746 ms
2024-07-10 21:33:26 - Filter 'webMvcObservationFilter' configured for use
2024-07-10 21:33:26 - HikariPool-1 - Starting...
2024-07-10 21:33:26 - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:c7323148-753b-497f-95e5-d86ec6ac8a4a user=SA
2024-07-10 21:33:26 - HikariPool-1 - Start completed.
2024-07-10 21:33:26 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/Assignment%201%20Spring%20Boot/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-10 21:33:26 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-10 21:33:26 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-10 21:33:26 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 21:33:26 - HHH000206: 'hibernate.properties' not found
2024-07-10 21:33:26 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-10 21:33:26 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-10 21:33:26 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-10 21:33:26 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-10 21:33:26 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-10 21:33:26 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-10 21:33:26 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-10 21:33:26 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-10 21:33:26 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-10 21:33:26 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-10 21:33:26 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-10 21:33:26 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-10 21:33:26 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-10 21:33:26 - HHH000026: Second-level cache disabled
2024-07-10 21:33:26 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4583b617
2024-07-10 21:33:26 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4583b617
2024-07-10 21:33:26 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4583b617
2024-07-10 21:33:26 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@22a63740
2024-07-10 21:33:26 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@22a63740
2024-07-10 21:33:26 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@211da640
2024-07-10 21:33:26 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@211da640
2024-07-10 21:33:26 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2ec92631
2024-07-10 21:33:26 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2ec92631
2024-07-10 21:33:26 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@76220ef1
2024-07-10 21:33:26 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@76220ef1
2024-07-10 21:33:26 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@76220ef1
2024-07-10 21:33:26 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@65ad2b42
2024-07-10 21:33:26 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@65ad2b42
2024-07-10 21:33:26 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@65ad2b42
2024-07-10 21:33:26 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@294ebe11
2024-07-10 21:33:26 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@294ebe11
2024-07-10 21:33:26 - Adding type registration image -> org.hibernate.type.BasicTypeReference@4e51eda7
2024-07-10 21:33:26 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2862271a
2024-07-10 21:33:26 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2862271a
2024-07-10 21:33:26 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2419fe6f
2024-07-10 21:33:26 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@78fb72cb
2024-07-10 21:33:26 - Adding type registration short -> org.hibernate.type.BasicTypeReference@398694a6
2024-07-10 21:33:26 - Adding type registration short -> org.hibernate.type.BasicTypeReference@398694a6
2024-07-10 21:33:26 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@398694a6
2024-07-10 21:33:26 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@653e7b
2024-07-10 21:33:26 - Adding type registration int -> org.hibernate.type.BasicTypeReference@653e7b
2024-07-10 21:33:26 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@653e7b
2024-07-10 21:33:26 - Adding type registration long -> org.hibernate.type.BasicTypeReference@6b64429e
2024-07-10 21:33:26 - Adding type registration long -> org.hibernate.type.BasicTypeReference@6b64429e
2024-07-10 21:33:26 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6b64429e
2024-07-10 21:33:26 - Adding type registration float -> org.hibernate.type.BasicTypeReference@48aa0813
2024-07-10 21:33:26 - Adding type registration float -> org.hibernate.type.BasicTypeReference@48aa0813
2024-07-10 21:33:26 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@48aa0813
2024-07-10 21:33:26 - Adding type registration double -> org.hibernate.type.BasicTypeReference@45849604
2024-07-10 21:33:26 - Adding type registration double -> org.hibernate.type.BasicTypeReference@45849604
2024-07-10 21:33:26 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@45849604
2024-07-10 21:33:26 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6cbbfe29
2024-07-10 21:33:26 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6cbbfe29
2024-07-10 21:33:26 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@25823192
2024-07-10 21:33:26 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@25823192
2024-07-10 21:33:26 - Adding type registration character -> org.hibernate.type.BasicTypeReference@3df04fa1
2024-07-10 21:33:26 - Adding type registration char -> org.hibernate.type.BasicTypeReference@3df04fa1
2024-07-10 21:33:26 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3df04fa1
2024-07-10 21:33:26 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5c25daad
2024-07-10 21:33:26 - Adding type registration string -> org.hibernate.type.BasicTypeReference@6fdc2db6
2024-07-10 21:33:26 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6fdc2db6
2024-07-10 21:33:26 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5be69f7e
2024-07-10 21:33:26 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@64544ee4
2024-07-10 21:33:26 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@64544ee4
2024-07-10 21:33:26 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@64544ee4
2024-07-10 21:33:26 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@16d61071
2024-07-10 21:33:26 - Adding type registration text -> org.hibernate.type.BasicTypeReference@18692e80
2024-07-10 21:33:26 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@779b4f9c
2024-07-10 21:33:26 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@31fe0ce5
2024-07-10 21:33:26 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@31fe0ce5
2024-07-10 21:33:26 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@178dc733
2024-07-10 21:33:26 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@178dc733
2024-07-10 21:33:26 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4641f66c
2024-07-10 21:33:26 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6b0ba697
2024-07-10 21:33:26 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2a531637
2024-07-10 21:33:26 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@539ee811
2024-07-10 21:33:26 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1aa59698
2024-07-10 21:33:26 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2cacb445
2024-07-10 21:33:26 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1e7cfd49
2024-07-10 21:33:26 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1e7cfd49
2024-07-10 21:33:26 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3a8640f7
2024-07-10 21:33:26 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3a8640f7
2024-07-10 21:33:26 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@ca10069
2024-07-10 21:33:26 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@ca10069
2024-07-10 21:33:26 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@45e69324
2024-07-10 21:33:26 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@45e69324
2024-07-10 21:33:26 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3c89b864
2024-07-10 21:33:26 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3c89b864
2024-07-10 21:33:26 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3400d6fa
2024-07-10 21:33:26 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@30a62a5b
2024-07-10 21:33:26 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@41a8f0d8
2024-07-10 21:33:26 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@41a8f0d8
2024-07-10 21:33:26 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@30133a11
2024-07-10 21:33:26 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2168def
2024-07-10 21:33:26 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3639b04
2024-07-10 21:33:26 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5cb8580
2024-07-10 21:33:26 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5cb8580
2024-07-10 21:33:26 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2ca1e49a
2024-07-10 21:33:26 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1aee6d14
2024-07-10 21:33:26 - Adding type registration date -> org.hibernate.type.BasicTypeReference@54a6ef6
2024-07-10 21:33:26 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@54a6ef6
2024-07-10 21:33:26 - Adding type registration time -> org.hibernate.type.BasicTypeReference@5c740c5a
2024-07-10 21:33:26 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5c740c5a
2024-07-10 21:33:26 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7fd2a67a
2024-07-10 21:33:26 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7fd2a67a
2024-07-10 21:33:26 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7fd2a67a
2024-07-10 21:33:26 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@163df259
2024-07-10 21:33:26 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@163df259
2024-07-10 21:33:26 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@163df259
2024-07-10 21:33:26 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@405603b6
2024-07-10 21:33:26 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3c3cd13a
2024-07-10 21:33:26 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@56b751b1
2024-07-10 21:33:26 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@56b751b1
2024-07-10 21:33:26 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2f61de04
2024-07-10 21:33:26 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2f61de04
2024-07-10 21:33:26 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2f61de04
2024-07-10 21:33:26 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5f5a33ed
2024-07-10 21:33:26 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5b59c3d
2024-07-10 21:33:26 - Adding type registration class -> org.hibernate.type.BasicTypeReference@69e36fe3
2024-07-10 21:33:26 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@69e36fe3
2024-07-10 21:33:26 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@48d31d25
2024-07-10 21:33:26 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@48d31d25
2024-07-10 21:33:26 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@48d31d25
2024-07-10 21:33:26 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6f65a203
2024-07-10 21:33:26 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6f65a203
2024-07-10 21:33:26 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1d0b447b
2024-07-10 21:33:26 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1d0b447b
2024-07-10 21:33:26 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4de158ca
2024-07-10 21:33:26 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4de158ca
2024-07-10 21:33:26 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4f2fdf3d
2024-07-10 21:33:26 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4f2fdf3d
2024-07-10 21:33:26 - Adding type registration url -> org.hibernate.type.BasicTypeReference@d180961
2024-07-10 21:33:26 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@d180961
2024-07-10 21:33:26 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4af7ac25
2024-07-10 21:33:26 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@d978ab9
2024-07-10 21:33:26 - Adding type registration object -> org.hibernate.type.JavaObjectType@611a2d82
2024-07-10 21:33:26 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@611a2d82
2024-07-10 21:33:26 - Adding type registration null -> org.hibernate.type.NullType@5f67181f
2024-07-10 21:33:26 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1169fdfd
2024-07-10 21:33:26 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@75add13c
2024-07-10 21:33:26 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@224d537d
2024-07-10 21:33:26 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@450d10cb
2024-07-10 21:33:26 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1bd59b82
2024-07-10 21:33:26 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6a9df5
2024-07-10 21:33:26 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@48f4f03e
2024-07-10 21:33:26 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@65d23aa3
2024-07-10 21:33:26 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@213ceb4e] into BootstrapContext; was [null]
2024-07-10 21:33:26 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@213ceb4e) [was null]
2024-07-10 21:33:26 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@74e4be21] into BootstrapContext; was [null]
2024-07-10 21:33:26 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4d174189] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@628bd77e]
2024-07-10 21:33:26 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 21:33:26 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@213ceb4e]
2024-07-10 21:33:26 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@213ceb4e]
2024-07-10 21:33:26 - Database ->
	   name : H2
	version : 2.2.224 (2023-09-17)
	  major : 2
	  minor : 2
2024-07-10 21:33:26 - Driver ->
	   name : H2 JDBC Driver
	version : 2.2.224 (2023-09-17)
	  major : 2
	  minor : 2
2024-07-10 21:33:26 - JDBC version : 4.2
2024-07-10 21:33:26 - HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 2.2.224
2024-07-10 21:33:26 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-07-10 21:33:26 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-10 21:33:26 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-10 21:33:26 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-10 21:33:26 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 21:33:26 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 21:33:26 - addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2024-07-10 21:33:26 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-10 21:33:26 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-10 21:33:26 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-10 21:33:26 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@20a9fb01] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@19fc0ef7]
2024-07-10 21:33:27 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-10 21:33:27 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-10 21:33:27 - Import with entity name Task
2024-07-10 21:33:27 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-10 21:33:27 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-10 21:33:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-10 21:33:27 - MetadataSourceProcessor property id with lazy=false
2024-07-10 21:33:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-10 21:33:27 - building BasicValue for id
2024-07-10 21:33:27 - Skipping column re-registration: task.id
2024-07-10 21:33:27 - Building property id
2024-07-10 21:33:27 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - MetadataSourceProcessor property category with lazy=false
2024-07-10 21:33:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-10 21:33:27 - building BasicValue for category
2024-07-10 21:33:27 - Skipping column re-registration: task.category
2024-07-10 21:33:27 - Building property category
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-10 21:33:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-10 21:33:27 - building BasicValue for createdAt
2024-07-10 21:33:27 - Skipping column re-registration: task.created_at
2024-07-10 21:33:27 - Building property createdAt
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - MetadataSourceProcessor property description with lazy=false
2024-07-10 21:33:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-10 21:33:27 - building BasicValue for description
2024-07-10 21:33:27 - Skipping column re-registration: task.description
2024-07-10 21:33:27 - Building property description
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - MetadataSourceProcessor property priority with lazy=false
2024-07-10 21:33:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-10 21:33:27 - building BasicValue for priority
2024-07-10 21:33:27 - Skipping column re-registration: task.priority
2024-07-10 21:33:27 - Building property priority
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - MetadataSourceProcessor property title with lazy=false
2024-07-10 21:33:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-10 21:33:27 - building BasicValue for title
2024-07-10 21:33:27 - Skipping column re-registration: task.title
2024-07-10 21:33:27 - Building property title
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-10 21:33:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-10 21:33:27 - building BasicValue for updatedAt
2024-07-10 21:33:27 - Skipping column re-registration: task.updated_at
2024-07-10 21:33:27 - Building property updatedAt
2024-07-10 21:33:27 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - Building property user
2024-07-10 21:33:27 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-10 21:33:27 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-10 21:33:27 - Import with entity name User
2024-07-10 21:33:27 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-10 21:33:27 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-10 21:33:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-10 21:33:27 - MetadataSourceProcessor property id with lazy=false
2024-07-10 21:33:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-10 21:33:27 - building BasicValue for id
2024-07-10 21:33:27 - Skipping column re-registration: users.id
2024-07-10 21:33:27 - Building property id
2024-07-10 21:33:27 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - MetadataSourceProcessor property email with lazy=false
2024-07-10 21:33:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-10 21:33:27 - building BasicValue for email
2024-07-10 21:33:27 - Skipping column re-registration: users.email
2024-07-10 21:33:27 - Building property email
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - MetadataSourceProcessor property password with lazy=false
2024-07-10 21:33:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-10 21:33:27 - building BasicValue for password
2024-07-10 21:33:27 - Skipping column re-registration: users.password
2024-07-10 21:33:27 - Building property password
2024-07-10 21:33:27 - Binding column: AnnotatedJoinColumn()
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-10 21:33:27 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-10 21:33:27 - Binding column: AnnotatedJoinColumn()
2024-07-10 21:33:27 - Binding column: AnnotatedJoinColumn()
2024-07-10 21:33:27 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-10 21:33:27 - Building property tasks
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - MetadataSourceProcessor property username with lazy=false
2024-07-10 21:33:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-10 21:33:27 - building BasicValue for username
2024-07-10 21:33:27 - Skipping column re-registration: users.username
2024-07-10 21:33:27 - Building property username
2024-07-10 21:33:27 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-10 21:33:27 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-10 21:33:27 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-10 21:33:27 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-10 21:33:27 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-10 21:33:27 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-10 21:33:27 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-10 21:33:27 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-10 21:33:27 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-10 21:33:27 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-10 21:33:27 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-10 21:33:27 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-10 21:33:27 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-10 21:33:27 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-10 21:33:27 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-10 21:33:27 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-10 21:33:27 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-10 21:33:27 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-10 21:33:27 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-10 21:33:27 - Building session factory
2024-07-10 21:33:27 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-10 21:33:27 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@49222187, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5e41e6ad, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.17529557824042410935, com.sun.management.jmxremote.port=60666, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=30604, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.17529557824042410935, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2665a2e7, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-10 21:33:27 - Session factory constructed with filter configurations : {}
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7901a5ab] under count; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@391e2a] under every; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@641cea11] under any; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fccd98f] under sinh; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@309e7215] under cosh; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b30b6f8] under tanh; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e965426] under pi; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@575fe6da] under log; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-10 21:33:27 - Registering alternate key : length -> character_length
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@299dd381] under position; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@123d0816] under overlay; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5543d800] under trim; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5d01a2eb] under cast; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fe337a5] under collate; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@655f92a1] under extract; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@637c8632] under ifnull; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@37ab1b10] under pad; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@34f8ce89] under str; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3fdede3a] under format; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2bc0603f] under timestampadd; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5a45c218] under timestampdiff; prior registration was null
2024-07-10 21:33:27 - Registering alternate key : dateadd -> timestampadd
2024-07-10 21:33:27 - Registering alternate key : datediff -> timestampdiff
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3163e03b] under current_date; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6aa18912] under current_time; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5c20505f] under current_timestamp; prior registration was null
2024-07-10 21:33:27 - Registering alternate key : current date -> current_date
2024-07-10 21:33:27 - Registering alternate key : current time -> current_time
2024-07-10 21:33:27 - Registering alternate key : current timestamp -> current_timestamp
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@cce92b5] under local_date; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2202c92f] under local_time; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@440d2d64] under local_datetime; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1a712f12] under offset_datetime; prior registration was null
2024-07-10 21:33:27 - Registering alternate key : local date -> local_date
2024-07-10 21:33:27 - Registering alternate key : local time -> local_time
2024-07-10 21:33:27 - Registering alternate key : local datetime -> local_datetime
2024-07-10 21:33:27 - Registering alternate key : offset datetime -> offset_datetime
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@62525dd3] under instant; prior registration was null
2024-07-10 21:33:27 - Registering alternate key : current_instant -> instant
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@18301763] under sql; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@237ee2e1] under count; prior registration was org.hibernate.dialect.function.CountFunction@7901a5ab
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@29c21acb] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e965426
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4113d9ab] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitnot)] under bitnot; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2024-07-10 21:33:27 - Registering alternate key : day -> day_of_month
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2202c92f
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@440d2d64
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@1abea1ed] under trunc; prior registration was null
2024-07-10 21:33:27 - Registering alternate key : truncate -> trunc
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f5288c5] under date_trunc; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2024-07-10 21:33:27 - Registering alternate key : chr -> char
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a9ef32e] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@299dd381
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e2ee348] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-07-10 21:33:27 - Registering alternate key : every -> bool_and
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-07-10 21:33:27 - Registering alternate key : any -> bool_or
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@61f08aa9] under format; prior registration was org.hibernate.dialect.function.FormatFunction@3fdede3a
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@4853f592] under listagg; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@573f2e67] under mode; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5d449307] under percentile_cont; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@44e7c06b] under percentile_disc; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@9715d26] under rank; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6d8096ee] under dense_rank; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@35d8ba22] under percent_rank; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3fc051ce] under cume_dist; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConstructorFunction@7a78d2aa] under array; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConstructorFunction@254d8ef6] under array_list; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@76219fe] under array_agg; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionFunction@4c0ab04f] under array_position; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionsFunction@774189d0] under array_positions; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionsFunction@1bcf2c64] under array_positions_list; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b5bddfe] under array_length; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatFunction@5ca3acad] under array_concat; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatElementFunction@583b4af4] under array_prepend; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatElementFunction@72c175f1] under array_append; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayContainsFunction@1ddc889b] under array_contains; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayContainsFunction@5ec3689b] under array_contains_nullable; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayOverlapsFunction@45964b9e] under array_overlaps; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayOverlapsFunction@166a5659] under array_overlaps_nullable; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a72925] under array_get; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArraySetFunction@4f0cdd0f] under array_set; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayRemoveFunction@44df834c] under array_remove; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayRemoveIndexFunction@73417494] under array_remove_index; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29b0c169] under array_slice; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayReplaceFunction@76ee7301] under array_replace; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@71817f66] under array_trim; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayFillFunction@75df4b1d] under array_fill; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayFillFunction@43120a77] under array_fill_list; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayToStringFunction@2941631f] under array_to_string; prior registration was null
2024-07-10 21:33:27 - abs(NUMERIC arg)
2024-07-10 21:33:27 - Double acos(NUMERIC arg)
2024-07-10 21:33:27 - Boolean any(BOOLEAN predicate)
2024-07-10 21:33:27 - array( ... )
2024-07-10 21:33:27 - array_agg(arg)
2024-07-10 21:33:27 - array_append( ... )
2024-07-10 21:33:27 - array_concat( ... )
2024-07-10 21:33:27 - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-07-10 21:33:27 - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-07-10 21:33:27 - array_fill(OBJECT element, INTEGER elementCount)
2024-07-10 21:33:27 - array_fill_list(OBJECT element, INTEGER elementCount)
2024-07-10 21:33:27 - array_get(ARRAY array, INTEGER index)
2024-07-10 21:33:27 - Integer array_length(ARRAY array)
2024-07-10 21:33:27 - array_list( ... )
2024-07-10 21:33:27 - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-07-10 21:33:27 - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-07-10 21:33:27 - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-07-10 21:33:27 - int[] array_positions(ARRAY array, OBJECT element)
2024-07-10 21:33:27 - List array_positions_list(ARRAY array, OBJECT element)
2024-07-10 21:33:27 - array_prepend( ... )
2024-07-10 21:33:27 - array_remove( ... )
2024-07-10 21:33:27 - array_remove_index( ... )
2024-07-10 21:33:27 - array_replace( ... )
2024-07-10 21:33:27 - array_set( ... )
2024-07-10 21:33:27 - array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-07-10 21:33:27 - String array_to_string( ... )
2024-07-10 21:33:27 - array_trim(ARRAY array, INTEGER elementsToRemove)
2024-07-10 21:33:27 - Integer ascii(STRING arg)
2024-07-10 21:33:27 - Double asin(NUMERIC arg)
2024-07-10 21:33:27 - Double atan(NUMERIC arg)
2024-07-10 21:33:27 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-10 21:33:27 - avg(NUMERIC arg)
2024-07-10 21:33:27 - bit_and(arg)
2024-07-10 21:33:27 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-10 21:33:27 - bit_or(arg)
2024-07-10 21:33:27 - bitand(arg0, arg1)
2024-07-10 21:33:27 - bitnot(arg)
2024-07-10 21:33:27 - bitor(arg0, arg1)
2024-07-10 21:33:27 - bitxor(arg0, arg1)
2024-07-10 21:33:27 - Boolean bool_and(BOOLEAN predicate)
2024-07-10 21:33:27 - Boolean bool_or(BOOLEAN predicate)
2024-07-10 21:33:27 - cast(arg as Type)
2024-07-10 21:33:27 - ceiling(NUMERIC arg)
2024-07-10 21:33:27 - Character char(INTEGER arg)
2024-07-10 21:33:27 - Integer character_length(STRING_OR_CLOB arg)
2024-07-10 21:33:27 - Character chr(INTEGER arg)
2024-07-10 21:33:27 - coalesce(arg0[, arg1[, ...]])
2024-07-10 21:33:27 - String collate(STRING string as COLLATION collation)
2024-07-10 21:33:27 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-10 21:33:27 - Double cos(NUMERIC arg)
2024-07-10 21:33:27 - Double cosh(NUMERIC arg)
2024-07-10 21:33:27 - Double cot(NUMERIC arg)
2024-07-10 21:33:27 - Long count([distinct ]{arg|*})
2024-07-10 21:33:27 - Double cume_dist([arg0[, ...]])
2024-07-10 21:33:27 - Date curdate()
2024-07-10 21:33:27 - Date current date
2024-07-10 21:33:27 - Time current time
2024-07-10 21:33:27 - Timestamp current timestamp
2024-07-10 21:33:27 - Date current_date
2024-07-10 21:33:27 - Instant current_instant
2024-07-10 21:33:27 - Time current_time
2024-07-10 21:33:27 - Timestamp current_timestamp
2024-07-10 21:33:27 - Time curtime()
2024-07-10 21:33:27 - date_trunc(STRING field, TEMPORAL datetime)
2024-07-10 21:33:27 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-10 21:33:27 - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-10 21:33:27 - Integer day(DATE arg)
2024-07-10 21:33:27 - Integer day_of_month(DATE arg)
2024-07-10 21:33:27 - Integer day_of_week(DATE arg)
2024-07-10 21:33:27 - Integer day_of_year(DATE arg)
2024-07-10 21:33:27 - String dayname(DATE arg)
2024-07-10 21:33:27 - Double degrees(NUMERIC arg)
2024-07-10 21:33:27 - Long dense_rank([arg0[, ...]])
2024-07-10 21:33:27 - Boolean every(BOOLEAN predicate)
2024-07-10 21:33:27 - Double exp(NUMERIC arg)
2024-07-10 21:33:27 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-10 21:33:27 - first_valueANY value
2024-07-10 21:33:27 - floor(NUMERIC arg)
2024-07-10 21:33:27 - String format(TEMPORAL datetime as STRING pattern)
2024-07-10 21:33:27 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-10 21:33:27 - Integer hour(TIME arg)
2024-07-10 21:33:27 - ifnull(arg0, arg1)
2024-07-10 21:33:27 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-10 21:33:27 - Instant instant
2024-07-10 21:33:27 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-10 21:33:27 - lagANY value[, INTEGER offset[, ANY default]]
2024-07-10 21:33:27 - last_valueANY value
2024-07-10 21:33:27 - leadANY value[, INTEGER offset[, ANY default]]
2024-07-10 21:33:27 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-10 21:33:27 - String left(STRING string, INTEGER length)
2024-07-10 21:33:27 - Integer length(STRING_OR_CLOB arg)
2024-07-10 21:33:27 - String listagg(STRING arg0, STRING arg1)
2024-07-10 21:33:27 - Double ln(NUMERIC arg)
2024-07-10 21:33:27 - LocalDate local date
2024-07-10 21:33:27 - LocalDateTime local datetime
2024-07-10 21:33:27 - LocalTime local time
2024-07-10 21:33:27 - LocalDate local_date
2024-07-10 21:33:27 - LocalDateTime local_datetime
2024-07-10 21:33:27 - LocalTime local_time
2024-07-10 21:33:27 - Time localtime
2024-07-10 21:33:27 - Timestamp localtimestamp
2024-07-10 21:33:27 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-10 21:33:27 - Double log(NUMERIC base, NUMERIC arg)
2024-07-10 21:33:27 - Double log10(NUMERIC arg)
2024-07-10 21:33:27 - String lower(STRING string)
2024-07-10 21:33:27 - String lpad(STRING string, INTEGER length[, STRING padding])
2024-07-10 21:33:27 - String ltrim(STRING string)
2024-07-10 21:33:27 - max(COMPARABLE arg)
2024-07-10 21:33:27 - Double median(NUMERIC arg)
2024-07-10 21:33:27 - Integer microsecond(TIME arg)
2024-07-10 21:33:27 - min(COMPARABLE arg)
2024-07-10 21:33:27 - Integer minute(TIME arg)
2024-07-10 21:33:27 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-10 21:33:27 - mode()
2024-07-10 21:33:27 - Integer month(DATE arg)
2024-07-10 21:33:27 - String monthname(DATE arg)
2024-07-10 21:33:27 - Timestamp now()
2024-07-10 21:33:27 - nth_valueANY value, INTEGER nth
2024-07-10 21:33:27 - nullif(arg0, arg1)
2024-07-10 21:33:27 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-10 21:33:27 - OffsetDateTime offset datetime
2024-07-10 21:33:27 - OffsetDateTime offset_datetime
2024-07-10 21:33:27 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-10 21:33:27 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-10 21:33:27 - Double percent_rank([arg0[, ...]])
2024-07-10 21:33:27 - percentile_cont(NUMERIC arg)
2024-07-10 21:33:27 - percentile_disc(NUMERIC arg)
2024-07-10 21:33:27 - Double pi
2024-07-10 21:33:27 - Integer position(STRING pattern in STRING string)
2024-07-10 21:33:27 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-10 21:33:27 - Integer quarter(DATE arg)
2024-07-10 21:33:27 - Double radians(NUMERIC arg)
2024-07-10 21:33:27 - Double rand([INTEGER seed])
2024-07-10 21:33:27 - Long rank([arg0[, ...]])
2024-07-10 21:33:27 - String repeat(STRING string, INTEGER times)
2024-07-10 21:33:27 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-10 21:33:27 - String right(STRING string, INTEGER length)
2024-07-10 21:33:27 - round(NUMERIC number[, INTEGER places])
2024-07-10 21:33:27 - Long row_number()
2024-07-10 21:33:27 - Long rownum()
2024-07-10 21:33:27 - String rpad(STRING string, INTEGER length[, STRING padding])
2024-07-10 21:33:27 - String rtrim(STRING string)
2024-07-10 21:33:27 - Integer second(TIME arg)
2024-07-10 21:33:27 - Integer sign(NUMERIC arg)
2024-07-10 21:33:27 - Double sin(NUMERIC arg)
2024-07-10 21:33:27 - Double sinh(NUMERIC arg)
2024-07-10 21:33:27 - String soundex(arg)
2024-07-10 21:33:27 - String space(INTEGER arg)
2024-07-10 21:33:27 - Object sql
2024-07-10 21:33:27 - Double sqrt(NUMERIC arg)
2024-07-10 21:33:27 - Double stddev_pop(NUMERIC arg)
2024-07-10 21:33:27 - Double stddev_samp(NUMERIC arg)
2024-07-10 21:33:27 - String str(arg)
2024-07-10 21:33:27 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-10 21:33:27 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-10 21:33:27 - sum(arg)
2024-07-10 21:33:27 - Timestamp sysdate
2024-07-10 21:33:27 - Double tan(NUMERIC arg)
2024-07-10 21:33:27 - Double tanh(NUMERIC arg)
2024-07-10 21:33:27 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-10 21:33:27 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-10 21:33:27 - String translate(STRING arg0, STRING arg1, STRING arg2)
2024-07-10 21:33:27 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-10 21:33:27 - trunc( ... )
2024-07-10 21:33:27 - truncate( ... )
2024-07-10 21:33:27 - String upper(STRING string)
2024-07-10 21:33:27 - Double var_pop(NUMERIC arg)
2024-07-10 21:33:27 - Double var_samp(NUMERIC arg)
2024-07-10 21:33:27 - Integer week(DATE arg)
2024-07-10 21:33:27 - Integer year(DATE arg)
2024-07-10 21:33:27 - Starting QueryInterpretationCache(2048)
2024-07-10 21:33:27 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-10 21:33:27 - Configured EntityCopyObserver strategy: disallow
2024-07-10 21:33:27 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-10 21:33:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-10 21:33:27 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-10 21:33:27 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-10 21:33:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-10 21:33:27 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-10 21:33:27 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-10 21:33:27 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-10 21:33:27 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-10 21:33:27 - Starting post-init callbacks
2024-07-10 21:33:27 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-10 21:33:27 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-10 21:33:27 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-10 21:33:27 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-10 21:33:27 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-10 21:33:27 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-10 21:33:27 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-10 21:33:27 - Created new SQL alias : u1_0
2024-07-10 21:33:27 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-10 21:33:27 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-10 21:33:27 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-10 21:33:27 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-10 21:33:27 -  Version select: select id from users where id=?
2024-07-10 21:33:27 -  Insert (0): insert into users (email,password,username,id) values (?,?,?,default)
2024-07-10 21:33:27 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-10 21:33:27 -  Delete (0): delete from users where id=?
2024-07-10 21:33:27 - Created new SQL alias : t1_0
2024-07-10 21:33:27 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-10 21:33:27 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4df54c1] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-10 21:33:27 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-10 21:33:27 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-10 21:33:27 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-10 21:33:27 -  Version select: select id from task where id=?
2024-07-10 21:33:27 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id,id) values (?,?,?,?,?,?,?,default)
2024-07-10 21:33:27 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-10 21:33:27 -  Delete (0): delete from task where id=?
2024-07-10 21:33:27 - Created new SQL alias : t1_0
2024-07-10 21:33:27 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@58e0d1ac] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-10 21:33:27 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-10 21:33:27 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6b7ebac1] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-10 21:33:27 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-10 21:33:27 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-10 21:33:27 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-10 21:33:27 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 21:33:27 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@20a9fb01] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5bb90b89]
2024-07-10 21:33:27 - Checking 0 named HQL queries
2024-07-10 21:33:27 - Checking 0 named SQL queries
2024-07-10 21:33:27 - drop table if exists task cascade 
2024-07-10 21:33:27 - drop table if exists users cascade 
2024-07-10 21:33:27 - create table task (created_at timestamp(6), id bigint generated by default as identity, updated_at timestamp(6), user_id bigint, category varchar(255), description varchar(255), priority varchar(255), title varchar(255), primary key (id))
2024-07-10 21:33:27 - create table users (id bigint generated by default as identity, email varchar(255), password varchar(255), username varchar(255), primary key (id))
2024-07-10 21:33:27 - alter table if exists task add constraint FKbhwpp8tr117vvbxhf5sbkdkc9 foreign key (user_id) references users
2024-07-10 21:33:27 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3b2114ce
2024-07-10 21:33:27 - Registering SessionFactory: 3458f785-0764-4640-8d23-e065482e09dc (<unnamed>)
2024-07-10 21:33:27 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-10 21:33:27 - Instantiated SessionFactory
2024-07-10 21:33:27 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 21:33:27 - Statistics initialized [enabled=false]
2024-07-10 21:33:28 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:33:28 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:33:28 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:33:28 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:33:28 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 21:33:28 - 

Using generated security password: 7c393534-7711-4a57-9bcc-a39a55a19770

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-10 21:33:28 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-10 21:33:28 - 11 mappings in 'requestMappingHandlerMapping'
2024-07-10 21:33:28 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-10 21:33:28 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-10 21:33:28 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-10 21:33:28 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-10 21:33:29 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-10 21:33:29 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-10 21:33:29 - Tomcat started on port 8080 (http) with context path '/'
2024-07-10 21:33:29 - Started TaskmanagementApplication in 5.775 seconds (process running for 6.268)
2024-07-10 21:33:29 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 21:33:29 - Initializing Servlet 'dispatcherServlet'
2024-07-10 21:33:29 - Detected StandardServletMultipartResolver
2024-07-10 21:33:29 - Detected AcceptHeaderLocaleResolver
2024-07-10 21:33:29 - Detected FixedThemeResolver
2024-07-10 21:33:29 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3cd6cab5
2024-07-10 21:33:29 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4df8f4e9
2024-07-10 21:33:29 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-10 21:33:29 - Completed initialization in 1 ms
2024-07-10 21:34:10 - Securing POST /api/users/register
2024-07-10 21:34:10 - Secured POST /api/users/register
2024-07-10 21:34:10 - POST "/api/users/register", parameters={}
2024-07-10 21:34:10 - Mapped to com.example.taskmanagement.controller.UserController#registerUser(User)
2024-07-10 21:34:10 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.User@5b8d4298]
2024-07-10 21:34:10 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-10 21:34:10 - begin
2024-07-10 21:34:10 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-10 21:34:10 - Executing identity-insert immediately
2024-07-10 21:34:10 - insert into users (email,password,username,id) values (?,?,?,default)
2024-07-10 21:34:10 - Initializer list is empty
2024-07-10 21:34:10 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@70e40e5e
2024-07-10 21:34:10 - Extracted JDBC value [0] - [1]
2024-07-10 21:34:10 - Extracted generated values [com.example.taskmanagement.model.User]: [Ljava.lang.Object;@2b843225
2024-07-10 21:34:11 - committing
2024-07-10 21:34:11 - Processing flush-time cascades
2024-07-10 21:34:11 - Dirty checking collections
2024-07-10 21:34:11 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-07-10 21:34:11 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-10 21:34:11 - Listing entities:
2024-07-10 21:34:11 - com.example.taskmanagement.model.User{password=$2a$10$2Dt3dqeT3FCdxOI6DFxqYe//qtcHpZuP6oY3OWlNweJHYTYB7fzgm, id=1, email=testuser@example.com, tasks=null, username=testuser}
2024-07-10 21:34:11 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-10 21:34:11 - Writing [com.example.taskmanagement.model.User@5b8d4298]
2024-07-10 21:34:11 - Completed 200 OK
2024-07-10 21:34:11 - Set SecurityContextHolder to anonymous SecurityContext
